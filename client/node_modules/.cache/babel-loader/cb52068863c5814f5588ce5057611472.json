{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/MovieRow/MovieRow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './MovieRow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\n\nconst MovieRow = ({\n  category,\n  fetchUrl,\n  backdrop\n}) => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    fetch(fetchUrl).then(res => res.json()).then(data => {\n      console.log(data.results);\n      setMovies(data.results);\n    });\n  }, [fetchUrl]);\n  const path = backdrop ? \"backdrop_path\" : \"poster_path\";\n\n  if (path === \"poster_path\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-row m-1 ms-4 mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poster-row\",\n        children: movies.length > 0 && movies.map(movie => {\n          if (movie[path]) {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"poster-img\",\n                src: IMG_API + movie[path],\n                alt: movie.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 33\n              }, this)\n            }, void 0, false);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category-row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poster-row\",\n      children: movies.length > 0 && movies.map(movie => {\n        if (movie[path]) {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"poster-img\",\n              src: IMG_API + movie[path],\n              alt: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this)\n          }, void 0, false);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieRow, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = MovieRow;\nexport default MovieRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieRow\");","map":{"version":3,"sources":["/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/MovieRow/MovieRow.js"],"names":["React","useEffect","useState","IMG_API","MovieRow","category","fetchUrl","backdrop","movies","setMovies","fetch","then","res","json","data","console","log","results","path","length","map","movie","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,gBAAP;;;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAAD,KAAqC;AAAA;;AAElD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,KAAK,CAACJ,QAAD,CAAL,CAAgBK,IAAhB,CAAqBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA5B,EACCF,IADD,CACMG,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,OAAjB;AACAR,MAAAA,SAAS,CAACK,IAAI,CAACG,OAAN,CAAT;AACD,KAJD;AAKD,GANM,EAMJ,CAACX,QAAD,CANI,CAAT;AAQE,QAAMY,IAAI,GAAGX,QAAQ,GAAG,eAAH,GAAqB,aAA1C;;AAEF,MAAIW,IAAI,KAAK,aAAb,EAA4B;AACxB,wBACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,8BACI;AAAA,kBAAKb;AAAL;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBAECG,MAAM,CAACW,MAAP,GAAgB,CAAhB,IACGX,MAAM,CAACY,GAAP,CAAYC,KAAD,IAAW;AAClB,cAAIA,KAAK,CAACH,IAAD,CAAT,EAAgB;AACZ,gCAAQ;AAAA,qCACJ;AAAK,gBAAA,SAAS,EAAC,YAAf;AAA4B,gBAAA,GAAG,EAAEf,OAAO,GAAGkB,KAAK,CAACH,IAAD,CAAhD;AAAwD,gBAAA,GAAG,EAAEG,KAAK,CAACC;AAAnE;AAAA;AAAA;AAAA;AAAA;AADI,6BAAR;AAGH;AAEJ,SAPD;AAHJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACQ;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAECd,MAAM,CAACW,MAAP,GAAgB,CAAhB,IACGX,MAAM,CAACY,GAAP,CAAYC,KAAD,IAAW;AAClB,YAAIA,KAAK,CAACH,IAAD,CAAT,EAAgB;AACZ,8BAAQ;AAAA,mCACJ;AAAK,cAAA,SAAS,EAAC,YAAf;AAA4B,cAAA,GAAG,EAAEf,OAAO,GAAGkB,KAAK,CAACH,IAAD,CAAhD;AAAwD,cAAA,GAAG,EAAEG,KAAK,CAACC;AAAnE;AAAA;AAAA;AAAA;AAAA;AADI,2BAAR;AAGH;AAEJ,OAPD;AAHJ;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAnDD;;GAAMlB,Q;;KAAAA,Q;AAqDN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './MovieRow.css';\n\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\n\nconst MovieRow = ({category, fetchUrl, backdrop }) => {\n\n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {\n        fetch(fetchUrl).then(res => res.json())\n        .then(data => {\n          console.log(data.results);\n          setMovies(data.results);\n        });\n      }, [fetchUrl])\n\n      const path = backdrop ? \"backdrop_path\" : \"poster_path\";\n\n    if (path === \"poster_path\") {\n        return (\n            <div className=\"category-row m-1 ms-4 mt-4\">\n                <h2>{category}</h2>\n                <div className=\"poster-row\">\n                    \n                {movies.length > 0 &&\n                    movies.map((movie) => {\n                        if (movie[path]){\n                            return (<>\n                                <img className=\"poster-img\" src={IMG_API + movie[path]} alt={movie.title} />\n                            </>)\n                        }\n                        \n                    })\n                }</div>\n            </div> \n        )\n    }\n\n    return (\n        <div className=\"category-row\">\n                <div className=\"poster-row\">\n                    \n                {movies.length > 0 &&\n                    movies.map((movie) => {\n                        if (movie[path]){\n                            return (<>\n                                <img className=\"poster-img\" src={IMG_API + movie[path]} alt={movie.title} />\n                            </>)\n                        }\n                        \n                    })\n                }</div>\n            </div> \n    )\n    \n}\n\nexport default MovieRow;"]},"metadata":{},"sourceType":"module"}