{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/MoviePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport requests from '../Constants/Requests';\nimport Container from '../Components/Container/Container';\nimport Rating from '../Components/Rating/Rating';\nimport Badge from '../Components/Badge/Badge';\nimport ReviewForm from '../Components/ReviewForm/ReviewForm';\nimport Reviews from '../Components/Reviews/Reviews';\nimport './MoviePage.css';\nimport { useLazyQuery } from '@apollo/client';\nimport { GET_MOVIE_REVIEWS } from '../Graphql/Queries';\nimport { setReviews } from '../features/movie/movieSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getReviews } from '../features/movie/movieSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\n\nconst MoviePage = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.auth.user);\n  const isLoading = useSelector(state => state.movie.isLoading);\n  const [getReviews, {\n    data,\n    loading,\n    error\n  }] = useLazyQuery(GET_MOVIE_REVIEWS);\n  const reviews = useSelector(state => state.movie.reviews);\n\n  const hasAlreadyReviewd = () => {\n    var temp = reviews.map(review => {\n      return review.authorId;\n    });\n    return temp.includes(user.id);\n  };\n\n  const [movie, setMovie] = useState({});\n  var tempUrl = props.location.pathname;\n  tempUrl = tempUrl.slice(7, tempUrl.length);\n  const movieId = tempUrl.slice(0, tempUrl.indexOf('/'));\n  useEffect(async () => {\n    const movieUrl = requests.moviepageRequests.fetchMovie(movieId).url;\n    fetch(movieUrl).then(res => res.json()).then(data => {\n      if (data.status_message) {\n        return;\n      }\n\n      setMovie(data);\n    });\n    getReviews({\n      variables: {\n        movieId: movieId\n      }\n    });\n    /*dispatch(getReviews({ movieId: movieId })).then((response) => {\n        //console.log(response.payload);\n    });*/\n  }, []);\n  useEffect(() => {\n    if (data) {\n      dispatch(setReviews(data.getMovieReviews));\n    }\n  }, [data]);\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  });\n\n  const movieNotFound = () => {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-white text-center\",\n      style: {\n        paddingTop: '10rem'\n      },\n      children: \"Movie not found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  };\n\n  const movieInfo = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid px-0\",\n      style: {\n        background: 'rgba(29, 29, 35, 1)',\n        paddingBottom: '5rem',\n        paddingTop: '5rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid px-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"img-container col-12 order-2 order-sm-1 col-sm-3 d-flex flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: IMG_API + movie.poster_path,\n                alt: movie.title,\n                style: {\n                  width: '100%',\n                  boxShadow: '10px 10px 20px black'\n                }\n              }, movie.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              style: {\n                color: 'rgba(80, 80, 100, 1)',\n                fontSize: '25px',\n                fontWeight: '500',\n                textShadow: '2px 2px black'\n              },\n              children: \"Production Companies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Container, {\n              variant: \"shadow\",\n              children: movie.production_companies.map((company, id) => {\n                return /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"\",\n                  style: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    color: 'rgba(29, 29, 35, 1)',\n                    fontSize: '16px',\n                    fontWeight: '500'\n                  },\n                  children: company.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col order-1 order-sm-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pb-3 row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-12 d-flex flex-column\",\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  style: {\n                    fontSize: '60px',\n                    textShadow: '4px 4px rgba(80, 80, 100, 1)'\n                  },\n                  children: movie.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 33\n                }, this), movie.tagline && /*#__PURE__*/_jsxDEV(\"h1\", {\n                  style: {\n                    color: 'rgba(80, 80, 100, 1)',\n                    fontSize: '25px',\n                    fontWeight: '500',\n                    textShadow: '2px 2px black'\n                  },\n                  children: movie.tagline\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 54\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-12 d-flex flex-row py-2 gap-3 genres\",\n                children: movie.genres.map((genre, id) => {\n                  return /*#__PURE__*/_jsxDEV(Badge, {\n                    children: genre.name\n                  }, id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 45\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col my-3\",\n                children: /*#__PURE__*/_jsxDEV(Container, {\n                  variant: \"shadow\",\n                  className: \"d-flex align-items-center justify-content-between\",\n                  children: [/*#__PURE__*/_jsxDEV(Rating, {\n                    className: \"\",\n                    size: \"large\",\n                    score: movie.vote_average,\n                    style: {\n                      backgroundColor: 'rgba(225, 202, 240, 1)',\n                      boxShadow: '4px 4px rgba(29, 29, 35, 1)',\n                      border: '2px solid white'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"\",\n                    style: {\n                      color: 'rgba(29, 29, 35, 1)',\n                      fontSize: '16px',\n                      fontWeight: '500',\n                      width: 'auto'\n                    },\n                    children: movie.runtime + \" mins\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex flex-column\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: 'rgba(29, 29, 35, 1)',\n                        fontSize: '16px',\n                        fontWeight: '500'\n                      },\n                      children: 'Budget: ' + formatter.format(movie.budget)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: 'rgba(29, 29, 35, 1)',\n                        fontSize: '16px',\n                        fontWeight: '500'\n                      },\n                      children: 'Revenue: ' + formatter.format(movie.revenue)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 25\n            }, this), movie.overview && /*#__PURE__*/_jsxDEV(Container, {\n              variant: \"shadow\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"py-1\",\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  color: 'white',\n                  color: 'white',\n                  fontSize: '25px',\n                  fontWeight: '500',\n                  textShadow: '2px 2px rgba(29, 29, 35, 1)'\n                },\n                children: \"Overview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"py-1\",\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  color: 'rgba(29, 29, 35, 1)',\n                  fontSize: '16px',\n                  fontWeight: '500'\n                },\n                children: movie.overview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 30\n            }, this), !hasAlreadyReviewd() && /*#__PURE__*/_jsxDEV(ReviewForm, {\n              className: \"my-4\",\n              movieId: movie.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this), reviews.length > 0 && /*#__PURE__*/_jsxDEV(Reviews, {\n              className: \"mt-3\",\n              reviews: reviews\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    style: {\n      backgroundColor: \"rgba(29, 29, 35, 1)\"\n    },\n    children: movie.hasOwnProperty('title') ? movieInfo() : movieNotFound()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MoviePage, \"xZzVYj88U2Y3PFBAjtqNYG8jjAU=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useLazyQuery, useSelector];\n});\n\n_c = MoviePage;\nexport default MoviePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviePage\");","map":{"version":3,"sources":["/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/MoviePage.js"],"names":["React","useEffect","useState","requests","Container","Rating","Badge","ReviewForm","Reviews","useLazyQuery","GET_MOVIE_REVIEWS","setReviews","useDispatch","useSelector","getReviews","IMG_API","MoviePage","props","dispatch","user","state","auth","isLoading","movie","data","loading","error","reviews","hasAlreadyReviewd","temp","map","review","authorId","includes","id","setMovie","tempUrl","location","pathname","slice","length","movieId","indexOf","movieUrl","moviepageRequests","fetchMovie","url","fetch","then","res","json","status_message","variables","getMovieReviews","formatter","Intl","NumberFormat","style","currency","movieNotFound","paddingTop","movieInfo","background","paddingBottom","poster_path","title","width","boxShadow","color","fontSize","fontWeight","textShadow","production_companies","company","display","alignItems","name","tagline","genres","genre","vote_average","backgroundColor","border","runtime","format","budget","revenue","overview","hasOwnProperty"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport requests from '../Constants/Requests';\nimport Container from '../Components/Container/Container';\nimport Rating from '../Components/Rating/Rating';\nimport Badge from '../Components/Badge/Badge';\nimport ReviewForm from '../Components/ReviewForm/ReviewForm';\nimport Reviews from '../Components/Reviews/Reviews';\nimport './MoviePage.css';\n\nimport { useLazyQuery } from '@apollo/client';\nimport { GET_MOVIE_REVIEWS } from '../Graphql/Queries';\n\nimport { setReviews } from '../features/movie/movieSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getReviews } from '../features/movie/movieSlice';\n\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\n\nconst MoviePage = (props) => {\n    const dispatch = useDispatch();\n    const user = useSelector((state) => state.auth.user);\n    const isLoading = useSelector((state) => state.movie.isLoading);\n\n    const [getReviews, {data, loading, error}] = useLazyQuery(GET_MOVIE_REVIEWS);\n\n    const reviews = useSelector((state) => state.movie.reviews);\n\n    const hasAlreadyReviewd = () => {\n        var temp = reviews.map(review => {\n            return review.authorId;\n        });\n\n        return temp.includes(user.id);\n    }\n\n    const [movie, setMovie] = useState({});\n\n    var tempUrl = props.location.pathname;\n    tempUrl = tempUrl.slice(7,tempUrl.length);\n\n    const movieId = tempUrl.slice(0, tempUrl.indexOf('/'));\n\n    useEffect(async () => {\n        const movieUrl = requests.moviepageRequests.fetchMovie(movieId).url;\n        fetch(movieUrl).then(res => res.json())\n        .then(data => {\n            if (data.status_message) {\n                return;\n            }\n            setMovie(data);\n            \n        });\n        getReviews({\n            variables: {\n                movieId: movieId,\n            }\n        })\n        /*dispatch(getReviews({ movieId: movieId })).then((response) => {\n            //console.log(response.payload);\n        });*/\n        \n    }, [])\n\n    useEffect(() => {\n        if (data) {\n            dispatch(setReviews(data.getMovieReviews));\n        }\n    }, [data]);\n    \n    var formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n      \n    });\n\n    const movieNotFound = () => {\n        return (\n            <h1 className=\"text-white text-center\" style={{\n                paddingTop: '10rem'\n            }}>Movie not found!</h1>\n        )\n    }\n\n    const movieInfo = () => {\n        return (\n            <div className=\"container-fluid px-0\" style={{\n            background: 'rgba(29, 29, 35, 1)',\n            paddingBottom: '5rem',\n            paddingTop: '5rem',\n        }}>\n            <div className=\"container-fluid px-4\">\n                <div className=\"row\">\n                    <div className=\"img-container col-12 order-2 order-sm-1 col-sm-3 d-flex flex-column\">\n                        <div className=\"mb-4\">\n                            <img key={movie.id} src={IMG_API + movie.poster_path} alt={movie.title} \n                                style={{\n                                    width: '100%',\n                                    boxShadow: '10px 10px 20px black'\n                                }}\n                            />\n                        </div>\n                        <h1 style={{\n                                color: 'rgba(80, 80, 100, 1)',\n                                fontSize: '25px',\n                                fontWeight: '500',\n                                textShadow: '2px 2px black',\n                            }}>Production Companies</h1>\n                        <Container variant=\"shadow\">\n                            {\n                                movie.production_companies.map((company, id) => {\n                                    return (\n                                        <span className=\"\" style={{\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            color: 'rgba(29, 29, 35, 1)',\n                                            fontSize: '16px',\n                                            fontWeight: '500',\n                                        }}>{company.name}</span>\n                                    )\n                                })\n                            }\n                        </Container>\n                    \n                    </div>\n\n                    <div className=\"col order-1 order-sm-2\">\n                        <div className=\"pb-3 row\">\n                            <div className=\"col-12 d-flex flex-column\">\n                                <h1 style={{\n                                    fontSize: '60px',\n                                    textShadow: '4px 4px rgba(80, 80, 100, 1)',\n                                }}>{movie.title}</h1>\n                                {\n                                    movie.tagline && <h1 style={{\n                                        color: 'rgba(80, 80, 100, 1)',\n                                        fontSize: '25px',\n                                        fontWeight: '500',\n                                        textShadow: '2px 2px black',\n                                    }}>{movie.tagline}</h1>\n                                }\n                            </div>\n\n                            <div className=\"col-12 d-flex flex-row py-2 gap-3 genres\">\n                                {\n                                    movie.genres.map((genre, id) => {\n                                        return (\n                                            <Badge key={id}>{genre.name}</Badge>\n                                        )\n                                    })\n                                }\n                            </div>\n                            \n                            <div className=\"col my-3\">\n                                <Container variant=\"shadow\" className=\"d-flex align-items-center justify-content-between\">\n                                    <Rating className=\"\" size=\"large\" score={movie.vote_average}\n                                        style={{\n                                            backgroundColor: 'rgba(225, 202, 240, 1)',\n                                            boxShadow: '4px 4px rgba(29, 29, 35, 1)',\n                                            border: '2px solid white',\n                                        }}\n                                    />\n                                    <span className=\"\" style={{\n                                            color: 'rgba(29, 29, 35, 1)',\n                                            fontSize: '16px',\n                                            fontWeight: '500',\n                                            width: 'auto'\n                                        }}>{movie.runtime+\" mins\"}</span>\n\n                                    <div className=\"d-flex flex-column\">\n                                        <span style={{\n                                            color: 'rgba(29, 29, 35, 1)',\n                                            fontSize: '16px',\n                                            fontWeight: '500',\n                                        }}>{'Budget: '+formatter.format(movie.budget)}</span>\n                                        <span style={{\n                                            color: 'rgba(29, 29, 35, 1)',\n                                            fontSize: '16px',\n                                            fontWeight: '500',\n                                        }}>{'Revenue: '+formatter.format(movie.revenue)}</span>\n                                    </div>\n                                    <div>\n\n                                    </div>\n                                    \n                                </Container>\n                            </div>\n                            \n                        </div>\n                        { movie.overview &&\n                             <Container variant=\"shadow\">\n                                <span className=\"py-1\" style={{\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    color: 'white',\n                                    color: 'white',\n                                    fontSize: '25px',\n                                    fontWeight: '500',\n                                    textShadow: '2px 2px rgba(29, 29, 35, 1)',\n                                }}>\n                                    Overview\n                                </span>\n                                <span className=\"py-1\" style={{\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    color: 'rgba(29, 29, 35, 1)',\n                                    fontSize: '16px',\n                                    fontWeight: '500',\n                                }}>{movie.overview}</span>\n                            </Container>\n                        }\n\n                        { !hasAlreadyReviewd() &&\n                            <ReviewForm className=\"my-4\" movieId={movie.id}></ReviewForm>\n                        }\n                        \n                        \n                        { reviews.length > 0 &&\n                            <Reviews className=\"mt-3\" reviews={reviews}/> \n                        }\n                         \n                    </div>\n                    \n                </div>\n            </div> \n        </div>\n        )\n    }\n    \n    return (\n        <div className=\"container-fluid\" style={{\n            backgroundColor: \"rgba(29, 29, 35, 1)\",\n        }}>\n            {movie.hasOwnProperty('title') ?\n                movieInfo()\n            :\n                movieNotFound()\n            }\n        </div>\n    )\n}\n\nexport default MoviePage;"]},"metadata":{},"sourceType":"module"}