{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/RegisterPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport './RegisterPage.css';\nimport { setUser } from './../features/authentication/authSlice';\nimport { useMutation } from '@apollo/client';\nimport { CREATE_USER } from '../Graphql/Mutations';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterPage = () => {\n  _s();\n\n  const [createUser, {\n    error\n  }] = useMutation(CREATE_USER);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const validUserSetUp = () => {\n    if (username.length <= 0) {\n      return {\n        success: false,\n        message: \"Must enter a username\"\n      };\n    } else if (password.length <= 0) {\n      return {\n        success: false,\n        message: \"Must enter a password\"\n      };\n    } else if (password !== confirmPassword) {\n      return {\n        success: false,\n        message: \"Passwords must match\"\n      };\n    }\n\n    return {\n      success: true,\n      message: \"Welcome to the Critics Club!\"\n    };\n  };\n\n  const register = async () => {\n    var temp = validUserSetUp();\n\n    if (temp.success === true) {\n      /*\n      dispatch(getRegister({\n          username: username,\n          lastName: lastName,\n          firstName: firstName,\n          email: email,\n          password: password,\n      })).then((res) => {\n          if (res.payload.success === false) {\n              return showError(res.payload.message);\n          }\n           history.push('/');\n      });\n      */\n      const response = await createUser({\n        variables: {\n          username: username,\n          lastName: lastName,\n          firstName: firstName,\n          email: email,\n          password: password,\n          created: new Date().toISOString().slice(0, 19).replace('T', ' '),\n          isActive: false\n        }\n      }).catch(error => {\n        showError(error.message);\n        return {\n          successful: false,\n          message: error.message\n        };\n      });\n\n      if (response.hasOwnProperty('data')) {\n        setUser(response.data.createUser);\n      }\n    } else {\n      showError(temp.message);\n    }\n  };\n\n  function showError(message) {\n    setErrorMessage(message);\n    setTimeout(message => {\n      setErrorMessage('');\n    }, 3000);\n  }\n\n  const renderErrorMesage = message => {\n    if (message.length <= 0) return;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"mt-0\",\n      style: {\n        color: 'white'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid px-0\",\n    style: {\n      background: 'rgba(29, 29, 35, 1)',\n      paddingBottom: '5rem',\n      paddingTop: '5rem'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"py-2 form-title\",\n        style: {\n          fontSize: '48px',\n          textShadow: '4px 4px rgba(80, 80, 100, 1)'\n        },\n        children: \"Create an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: renderErrorMesage(errorMessage)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"container-fluid py-3\",\n        style: {\n          backgroundColor: 'rgba(80, 80, 100, 1)',\n          borderTop: '4px solid rgba(225, 202, 240, 1)',\n          boxShadow: '10px 10px 20px black',\n          borderRadius: '3px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3 col-12 col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"exampleInputFirstName1\",\n              className: \"form-label\",\n              children: \"First name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"firstName\",\n              className: \"form-control\",\n              id: \"exampleInputFirstName1\",\n              \"aria-describedby\": \"firstNameHelp\",\n              onChange: e => {\n                setFirstName(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3 col-12 col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"exampleInputLastName1\",\n              className: \"form-label\",\n              children: \"Last name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"lastName\",\n              className: \"form-control\",\n              id: \"exampleInputLastName1\",\n              \"aria-describedby\": \"firstNameHelp\",\n              onChange: e => {\n                setLastName(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"exampleInputUsername1\",\n            className: \"form-label d-flex\",\n            children: \"Username *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"username\",\n            className: \"form-control\",\n            id: \"exampleInputUsername1\",\n            \"aria-describedby\": \"usernameHelp\",\n            onChange: e => {\n              setUsername(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"exampleInputEmail1\",\n            className: \"form-label\",\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-control\",\n            id: \"exampleInputEmail1\",\n            \"aria-describedby\": \"emailHelp\",\n            onChange: e => {\n              setEmail(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"emailHelp\",\n            className: \"form-text\",\n            style: {\n              color: 'rgba(29, 29, 35, 1)'\n            },\n            children: \"We'll never share your email with anyone else.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3 col-12 col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"exampleInputPassword1\",\n              className: \"form-label d-flex\",\n              children: \"Password *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              id: \"exampleInputPassword1\",\n              onChange: e => {\n                setPassword(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3 col-12 col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"exampleInputConfirmPassword1\",\n              className: \"form-label\",\n              children: \"Confirm Password *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              id: \"exampleInputConfirmPassword1\",\n              onChange: e => {\n                setConfirmPassword(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"confirmPasswordHelp\",\n              className: \"form-text\",\n              style: {\n                color: 'rgba(29, 29, 35, 1)'\n              },\n              children: \"Re-enter your password to confirm it was entered correctly.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn-login draw meet\",\n          onClick: register,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterPage, \"n6ghTHWWp3j2M6VwrKtO7NxXsiY=\", false, function () {\n  return [useMutation, useHistory, useDispatch];\n});\n\n_c = RegisterPage;\nexport default RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/RegisterPage.js"],"names":["React","useEffect","useState","useDispatch","setUser","useMutation","CREATE_USER","useHistory","RegisterPage","createUser","error","history","dispatch","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","email","setEmail","firstName","setFirstName","lastName","setLastName","errorMessage","setErrorMessage","validUserSetUp","length","success","message","register","temp","response","variables","created","Date","toISOString","slice","replace","isActive","catch","showError","successful","hasOwnProperty","data","setTimeout","renderErrorMesage","color","background","paddingBottom","paddingTop","fontSize","textShadow","backgroundColor","borderTop","boxShadow","borderRadius","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport './RegisterPage.css'\nimport { \n    setUser,\n } from './../features/authentication/authSlice';\n import { useMutation } from '@apollo/client';\nimport { CREATE_USER } from '../Graphql/Mutations';\n\n\nimport { useHistory } from 'react-router-dom';\n\n\nconst RegisterPage = () => {\n    const [createUser, { error }] = useMutation(CREATE_USER)\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [email, setEmail] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const validUserSetUp = () => {\n        if (username.length <= 0) {\n            return {success: false, message: \"Must enter a username\"};\n        } else if (password.length <= 0) {\n            return {success: false, message: \"Must enter a password\"};\n        } else if (password !== confirmPassword) {\n            return {success: false, message: \"Passwords must match\"};\n        }\n\n        return {success: true, message: \"Welcome to the Critics Club!\"};\n    }\n\n    const register = async () => {\n        var temp = validUserSetUp();\n\n        if (temp.success === true) {\n            /*\n            dispatch(getRegister({\n                username: username,\n                lastName: lastName,\n                firstName: firstName,\n                email: email,\n                password: password,\n            })).then((res) => {\n                if (res.payload.success === false) {\n                    return showError(res.payload.message);\n                }\n\n                history.push('/');\n            });\n            */\n           const response = await createUser({\n               variables: {\n                username: username,\n                lastName: lastName,\n                firstName: firstName,\n                email: email,\n                password: password,\n                created: new Date().toISOString().slice(0, 19).replace('T', ' '),\n                isActive: false,\n               }\n           }).catch(error => {\n               showError(error.message);\n               return { successful: false, message: error.message }   \n           })\n           if (response.hasOwnProperty('data')) {\n               setUser(response.data.createUser);\n           }\n\n        } else {\n           showError(temp.message);\n        }\n\n    };\n\n    function showError(message) {\n\n        setErrorMessage(message);\n        setTimeout((message) => {\n            setErrorMessage('');\n        }, 3000);\n    }\n\n    const renderErrorMesage = (message) => {\n        if (message.length <= 0) return;\n\n        return (\n            <span className=\"mt-0\" style={{\n                color: 'white'\n            }}>{message}</span>\n        )\n    }\n\n    return (\n        <div className=\"container-fluid px-0\" style={{\n            background: 'rgba(29, 29, 35, 1)',\n            paddingBottom: '5rem',\n            paddingTop: '5rem',\n        }}>\n            <div className=\"container-fluid px-4\">\n                <h1 className=\"py-2 form-title\" style={{\n                    fontSize: '48px',\n                    textShadow: '4px 4px rgba(80, 80, 100, 1)',\n                }}>Create an account</h1>\n\n                <div>\n                    {renderErrorMesage(errorMessage)}\n                </div>\n\n                <form className=\"container-fluid py-3\" style={{\n                    backgroundColor: 'rgba(80, 80, 100, 1)',\n                    borderTop: '4px solid rgba(225, 202, 240, 1)',\n                    boxShadow: '10px 10px 20px black',\n                    borderRadius: '3px',\n                }}>\n                <div className=\"row\">\n                    <div className=\"mb-3 col-12 col-md-6\">\n                        <label htmlFor=\"exampleInputFirstName1\" className=\"form-label\">First name</label>\n                        <input type=\"firstName\" className=\"form-control\" id=\"exampleInputFirstName1\" aria-describedby=\"firstNameHelp\"\n                            onChange={(e) => {\n                                setFirstName(e.target.value);\n                            }}\n                        />\n                    </div>\n                    <div className=\"mb-3 col-12 col-md-6\">\n                        <label htmlFor=\"exampleInputLastName1\" className=\"form-label\">Last name</label>\n                        <input type=\"lastName\" className=\"form-control\" id=\"exampleInputLastName1\" aria-describedby=\"firstNameHelp\"\n                            onChange={(e) => {\n                                setLastName(e.target.value);\n                            }}\n                        />\n                    </div>\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"exampleInputUsername1\" className=\"form-label d-flex\">Username *</label>\n                    <input type=\"username\" className=\"form-control\" id=\"exampleInputUsername1\" aria-describedby=\"usernameHelp\"\n                        onChange={(e) => {\n                            setUsername(e.target.value);\n                        }}\n                    />\n                </div>\n                \n                <div className=\"mb-2\">\n                    <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n                    <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\n                        onChange={(e) => {\n                            setEmail(e.target.value);\n                        }}\n                    />\n                    <div id=\"emailHelp\" className=\"form-text\" style={{\n                        color: 'rgba(29, 29, 35, 1)'\n                    }}>We'll never share your email with anyone else.</div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"mb-3 col-12 col-md-6\">\n                        <label htmlFor=\"exampleInputPassword1\" className=\"form-label d-flex\">Password *</label>\n                        <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\"\n                            onChange={(e) => {\n                                setPassword(e.target.value);\n                            }}\n                        />\n                    </div>\n                    <div className=\"mb-3 col-12 col-md-6\">\n                        <label htmlFor=\"exampleInputConfirmPassword1\" className=\"form-label\">Confirm Password *</label>\n                        <input type=\"password\" className=\"form-control\" id=\"exampleInputConfirmPassword1\"\n                            onChange={(e) => {\n                                setConfirmPassword(e.target.value);\n                            }}\n                        />\n                        <div id=\"confirmPasswordHelp\" className=\"form-text\" style={{\n                            color: 'rgba(29, 29, 35, 1)'\n                        }}>Re-enter your password to confirm it was entered correctly.</div>\n                    </div>\n                </div>\n                \n                <button type=\"button\" className=\"btn-login draw meet\"\n                    onClick={register}\n                >Register</button>\n                </form>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default RegisterPage;"]},"metadata":{},"sourceType":"module"}