{"ast":null,"code":"import axios from 'axios';\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nexport const getReviews = createAsyncThunk('movie/getReviews', async ({\n  movieId\n}) => {\n  return await axios.get(\"http://localhost:3001/getReviews\", {\n    params: {\n      movieId: movieId\n    }\n  }).then(response => {\n    if (response.data.message) {\n      console.log(response.data.message);\n      return null;\n    } else {\n      return response.data;\n    }\n  });\n});\nexport const addLike = createAsyncThunk('review/addLike', async ({\n  reviewId,\n  userId\n}) => {\n  return await axios.post(\"http://localhost:3001/addLike\", {\n    reviewId: reviewId,\n    likerId: userId\n  }).then((response, err) => {\n    console.log(response);\n\n    if (response.data.success === false) {\n      console.log(response.data.message);\n      return null;\n    } else {\n      return {\n        response: response.data\n      };\n    }\n  });\n});\nexport const addDislike = createAsyncThunk('review/addDislike', async ({\n  reviewId,\n  userId\n}) => {\n  return await axios.post(\"http://localhost:3001/addDislikes\", {\n    reviewId: reviewId,\n    likerId: userId\n  }).then(response => {\n    if (response.data.message) {\n      console.log(response.data.message);\n      return null;\n    } else {\n      return {\n        response: response.data,\n        reviewId: reviewId,\n        userId: userId\n      };\n    }\n  });\n});\nexport const movieSlice = createSlice({\n  name: 'movie',\n  initialState: {\n    isLoading: true,\n    movieInfo: {},\n    reviews: []\n  },\n  reducers: {\n    addReview: (state, action) => {\n      state.reviews.push(action.payload);\n    }\n  },\n  extraReducers: {\n    [getReviews.fulfilled]: (state, action) => {\n      if (action.payload) {\n        state.reviews = action.payload;\n        state.isLoading = false;\n      }\n    },\n    [addLike.fulfilled]: (state, action) => {\n      if (action.payload) {\n        state.reviews.map((review, indx) => {\n          if (review.id === action.payload.reviewId) {\n            state.reviews[indx].likes += 1;\n          }\n        });\n      }\n    }\n  }\n});\nexport const {\n  addReview\n} = movieSlice.actions;\nexport default movieSlice.reducer;","map":{"version":3,"sources":["/Users/daniel/Desktop/Projects/FilmCritic/client/src/features/movie/movieSlice.js"],"names":["axios","createSlice","createAsyncThunk","getReviews","movieId","get","params","then","response","data","message","console","log","addLike","reviewId","userId","post","likerId","err","success","addDislike","movieSlice","name","initialState","isLoading","movieInfo","reviews","reducers","addReview","state","action","push","payload","extraReducers","fulfilled","map","review","indx","id","likes","actions","reducer"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const getReviews = createAsyncThunk('movie/getReviews', async ({ movieId }) => {\n    return await axios.get(\"http://localhost:3001/getReviews\", {\n              params: {\n                movieId: movieId,\n              }\n          }).then((response) => {\n              if (response.data.message) {\n                  console.log(response.data.message);\n                  return null;\n              } else {\n                  return response.data;\n              }\n          });\n});\n\n\nexport const addLike = createAsyncThunk('review/addLike', async ({ reviewId, userId }) => {\n    return await axios.post(\"http://localhost:3001/addLike\", {\n        reviewId: reviewId,\n        likerId: userId\n    }).then((response, err) => {\n        console.log(response);\n        if (response.data.success === false) {\n            console.log(response.data.message);\n            return null;\n        } else {\n            return {response: response.data};\n        }\n    })\n});\n\nexport const addDislike = createAsyncThunk('review/addDislike', async ({ reviewId, userId }) => {\n    return await axios.post(\"http://localhost:3001/addDislikes\", {\n        reviewId: reviewId,\n        likerId: userId\n    }).then((response) => {\n        if (response.data.message) {\n            console.log(response.data.message);\n            return null;\n        } else {\n            return {response: response.data, reviewId: reviewId, userId: userId};\n        }\n    })\n});\n\nexport const movieSlice = createSlice({\n    name: 'movie',\n    initialState: {\n        isLoading: true,\n        movieInfo: {\n            \n        },\n        reviews: []\n    },\n    reducers: {\n        addReview: (state, action) => {\n            state.reviews.push(action.payload);\n        }\n    },\n    extraReducers: {\n        [getReviews.fulfilled]: (state, action) => {\n            if (action.payload) {\n                state.reviews = action.payload;\n                state.isLoading = false;\n            } \n        },\n        [addLike.fulfilled]: (state, action) => {\n            if (action.payload) {\n                state.reviews.map((review, indx) => {\n                    if (review.id === action.payload.reviewId) {\n                        state.reviews[indx].likes += 1;\n                    }\n                })\n            }\n        },\n        \n    }\n});\n\nexport const { addReview } = movieSlice.actions;\n\n\n\n\nexport default movieSlice.reducer;"]},"metadata":{},"sourceType":"module"}