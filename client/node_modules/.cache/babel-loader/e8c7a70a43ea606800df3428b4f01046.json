{"ast":null,"code":"import axios from 'axios';\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nexport const getReviews = createAsyncThunk('user/getReviews', async ({\n  movieId\n}) => {\n  return await axios.get(\"http://localhost:3001/getReviews\", {\n    params: {\n      movieId: movieId\n    }\n  }).then(response => {\n    if (response.data.message) {\n      console.log(response.data.message);\n      return null;\n    } else {\n      return response.data;\n    }\n  });\n});\nexport const movieSlice = createSlice({\n  name: 'movie',\n  initialState: {\n    isloading: true,\n    movieInfo: {},\n    reviews: []\n  },\n  reducers: {},\n  extraReducers: {\n    [getReviews.fulfilled]: (state, action) => {\n      if (action.payload) {\n        state.reviews.push(action.payload);\n      }\n    }\n  }\n});\nexport const {} = movieSlice.actions;\nexport default movieSlice.reducer;","map":{"version":3,"sources":["/Users/daniel/Desktop/Projects/FilmCritic/client/src/features/movie/movieSlice.js"],"names":["axios","createSlice","createAsyncThunk","getReviews","movieId","get","params","then","response","data","message","console","log","movieSlice","name","initialState","isloading","movieInfo","reviews","reducers","extraReducers","fulfilled","state","action","payload","push","actions","reducer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AAEA,OAAO,MAAMC,UAAU,GAAGD,gBAAgB,CAAC,iBAAD,EAAoB,OAAO;AAAEE,EAAAA;AAAF,CAAP,KAAuB;AACjF,SAAO,MAAMJ,KAAK,CAACK,GAAN,CAAU,kCAAV,EAA8C;AACjDC,IAAAA,MAAM,EAAE;AACNF,MAAAA,OAAO,EAAEA;AADH;AADyC,GAA9C,EAIJG,IAJI,CAIEC,QAAD,IAAc;AAClB,QAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACC,IAAT,CAAcC,OAA1B;AACA,aAAO,IAAP;AACH,KAHD,MAGO;AACH,aAAOF,QAAQ,CAACC,IAAhB;AACH;AACJ,GAXM,CAAb;AAYH,CAbyC,CAAnC;AAgBP,OAAO,MAAMI,UAAU,GAAGZ,WAAW,CAAC;AAClCa,EAAAA,IAAI,EAAE,OAD4B;AAElCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,SAAS,EAAE,IADD;AAEVC,IAAAA,SAAS,EAAE,EAFD;AAKVC,IAAAA,OAAO,EAAE;AALC,GAFoB;AASlCC,EAAAA,QAAQ,EAAE,EATwB;AAYlCC,EAAAA,aAAa,EAAE;AACX,KAACjB,UAAU,CAACkB,SAAZ,GAAwB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvC,UAAIA,MAAM,CAACC,OAAX,EAAoB;AAChBF,QAAAA,KAAK,CAACJ,OAAN,CAAcO,IAAd,CAAmBF,MAAM,CAACC,OAA1B;AACH;AACJ;AALU;AAZmB,CAAD,CAA9B;AAqBP,OAAO,MAAM,KAAOX,UAAU,CAACa,OAAxB;AAKP,eAAeb,UAAU,CAACc,OAA1B","sourcesContent":["import axios from 'axios';\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const getReviews = createAsyncThunk('user/getReviews', async ({ movieId }) => {\n    return await axios.get(\"http://localhost:3001/getReviews\", {\n              params: {\n                movieId: movieId,\n              }\n          }).then((response) => {\n              if (response.data.message) {\n                  console.log(response.data.message);\n                  return null;\n              } else {\n                  return response.data;\n              }\n          });\n});\n\n\nexport const movieSlice = createSlice({\n    name: 'movie',\n    initialState: {\n        isloading: true,\n        movieInfo: {\n            \n        },\n        reviews: []\n    },\n    reducers: {\n        \n    },\n    extraReducers: {\n        [getReviews.fulfilled]: (state, action) => {\n            if (action.payload) {\n                state.reviews.push(action.payload);\n            } \n        }\n    }\n});\n\nexport const {  } = movieSlice.actions;\n\n\n\n\nexport default movieSlice.reducer;"]},"metadata":{},"sourceType":"module"}