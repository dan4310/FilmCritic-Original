{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/ReviewForm/ReviewForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Container from '../Container/Container';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addReview, setReviews } from '../../features/movie/movieSlice';\nimport IconRating from '../IconRating/IconRating';\nimport { useMutation } from '@apollo/client';\nimport { CREATE_REVIEW } from '../../Graphql/Mutations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReviewForm = ({\n  children,\n  className,\n  style,\n  movieId\n}) => {\n  _s();\n\n  const [createReview, {\n    data: reviewData,\n    error: reviewError,\n    loading: reviewLoading\n  }] = useMutation(CREATE_REVIEW);\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  const user = useSelector(state => state.auth.user);\n  const [message, setMessage] = useState('');\n  const [rating, setRating] = useState(0.0);\n  const [review, setReview] = useState('');\n\n  const onSubmitReview = () => {\n    if (review.length === 0) {\n      return showMessage(\"Must leave a review to post\");\n    }\n\n    if (rating === 0) {\n      return showMessage(\"Must leave a rating\");\n    }\n\n    createReview({\n      variables: {\n        authorId: user.id,\n        description: review,\n        movieId: movieId,\n        rating: rating\n      }\n    });\n  };\n\n  const showMessage = message => {\n    setMessage(message);\n    setTimeout(() => {\n      setMessage('');\n    }, 3000);\n  };\n\n  useEffect(() => {\n    if (reviewLoading) showMessage(\"Loading...\");\n  }, [reviewLoading]);\n  useEffect(() => {\n    if (reviewError) showMessage(reviewError.message);\n  }, [reviewError]);\n  useEffect(() => {\n    if (reviewData === null || reviewData === void 0 ? void 0 : reviewData.review) {\n      showMessage(\"Posted\");\n      console.log(reviewData.review);\n      dispatch(addReview(reviewData.review));\n    }\n  }, [reviewData]);\n\n  const ratingGrade = ratingData => {\n    var count = 0;\n    ratingData.map(item => {\n      if (item.isHovered === true) {\n        count += 1;\n      }\n    });\n    setRating(count);\n    return count;\n  };\n\n  const renderMessage = message => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: 'white',\n        textTransform: 'initial'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  };\n\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      topBorder: true,\n      variant: \"shadow\",\n      className: className,\n      style: { ...style\n      },\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"reviewInput\",\n        className: \"form-label\",\n        children: \"Sign in to leave a review!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderMessage(message)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      topBorder: true,\n      variant: \"shadow\",\n      className: \"mt-0\",\n      style: { ...style\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"reviewInput\",\n          className: \"form-label py-1\",\n          children: \"Leave a review!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"reviewInput\",\n          \"aria-describedby\": \"reviewHelp\",\n          value: review,\n          placeholder: \"What was your favorite part?\",\n          onChange: e => {\n            setReview(e.target.value);\n          },\n          style: {\n            height: '200px',\n            display: 'inline'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex my-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-login draw meet me-2\",\n            onClick: onSubmitReview,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(IconRating, {\n            handleChange: ratingGrade\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReviewForm, \"JImVBti5Ck/K6tvCRhNiHeOjgFU=\", false, function () {\n  return [useMutation, useDispatch, useSelector, useSelector];\n});\n\n_c = ReviewForm;\nexport default ReviewForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewForm\");","map":{"version":3,"sources":["/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/ReviewForm/ReviewForm.js"],"names":["React","useEffect","useState","Container","useSelector","useDispatch","addReview","setReviews","IconRating","useMutation","CREATE_REVIEW","ReviewForm","children","className","style","movieId","createReview","data","reviewData","error","reviewError","loading","reviewLoading","dispatch","isLoggedIn","state","auth","user","message","setMessage","rating","setRating","review","setReview","onSubmitReview","length","showMessage","variables","authorId","id","description","setTimeout","console","log","ratingGrade","ratingData","count","map","item","isHovered","renderMessage","color","textTransform","e","target","value","height","display"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Container from '../Container/Container';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { \n    addReview,\n    setReviews\n } from '../../features/movie/movieSlice';\nimport IconRating from '../IconRating/IconRating';\n\nimport { useMutation } from '@apollo/client';\nimport { CREATE_REVIEW } from '../../Graphql/Mutations';\n\nconst ReviewForm = ({ children, className, style, movieId }) => {\n    const [createReview, { data: reviewData, error: reviewError, loading: reviewLoading }] = useMutation(CREATE_REVIEW);\n\n    const dispatch = useDispatch();\n    const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\n    const user = useSelector((state) => state.auth.user);\n    const [message, setMessage] = useState('');\n\n    const [rating, setRating] = useState(0.0);\n    const [review, setReview] = useState('');\n\n    const onSubmitReview = () => {\n        if (review.length === 0) {\n            return showMessage(\"Must leave a review to post\");\n        }\n        if (rating === 0) {\n            return showMessage(\"Must leave a rating\");\n        }\n        createReview({ variables: {\n            authorId: user.id,\n            description: review,\n            movieId: movieId,\n            rating: rating,\n        }});\n    }\n\n    const showMessage = (message) => {\n        setMessage(message);\n        setTimeout(() => {\n            setMessage('');\n        }, 3000);\n    }\n\n    useEffect(() => {\n        if (reviewLoading) showMessage(\"Loading...\");\n    }, [reviewLoading]);\n    useEffect(() => {\n        if (reviewError) showMessage(reviewError.message);\n    }, [reviewError]);\n\n    useEffect(() => {\n        if (reviewData?.review) {\n            showMessage(\"Posted\");\n            console.log(reviewData.review)\n            dispatch(addReview(reviewData.review));\n        }\n    }, [reviewData]);\n\n    const ratingGrade = (ratingData) => {\n        var count = 0;\n        ratingData.map(item => {\n            if (item.isHovered === true) {\n                count += 1;\n            }\n        });\n        setRating(count);\n        return count;\n    }\n\n    const renderMessage = (message) => {\n        return(\n            <span style={{\n                color: 'white',\n                textTransform: 'initial'\n            }}>{message}</span>\n        )\n    }\n\n    if (!isLoggedIn) {\n        return (\n            <Container topBorder variant='shadow' className={className} style={{\n                ...style\n            }}>\n                <label htmlFor=\"reviewInput\" className=\"form-label\">Sign in to leave a review!</label>\n            </Container>\n        )\n    }\n\n    return (\n        <form className={className}>\n        <div>\n            {renderMessage(message)}\n        </div>\n        <Container topBorder variant='shadow' className=\"mt-0\" style={{\n            ...style\n        }}>\n            <div className=\"my-3\">\n                    <label htmlFor=\"reviewInput\" className=\"form-label py-1\">Leave a review!</label>\n                    <textarea type=\"text\" className=\"form-control\" id=\"reviewInput\" aria-describedby=\"reviewHelp\"\n                        value={review}\n                        placeholder=\"What was your favorite part?\"\n                        onChange={(e) => {\n                            setReview(e.target.value);\n                        }}\n                        style={{\n                            height: '200px',\n                            display: 'inline',\n                        }}\n                    />\n            \n                <div className=\"d-flex my-2\">\n                    <button type=\"button\" className=\"btn-login draw meet me-2\"\n                        onClick={onSubmitReview}\n                    >Submit</button>\n                    <IconRating handleChange={ratingGrade}></IconRating>\n                </div>\n            </div>\n        </Container>\n        </form>\n    )\n}\n\nexport default ReviewForm;"]},"metadata":{},"sourceType":"module"}