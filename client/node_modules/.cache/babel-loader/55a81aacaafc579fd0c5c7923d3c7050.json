{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Container from '../Components/Container/Container';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setUser } from './../features/authentication/authSlice';\nimport { useLazyQuery } from '@apollo/client';\nimport { GET_USER_LOGIN } from '../Graphql/Queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = props => {\n  _s();\n\n  const [getLogin, {\n    data,\n    loading,\n    error\n  }] = useLazyQuery(GET_USER_LOGIN);\n  const history = useHistory();\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  const dispatch = useDispatch();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const showErrorMessage = message => {\n    setErrorMessage(message);\n    setTimeout(() => {\n      setErrorMessage('');\n    }, 3000);\n  };\n\n  useEffect(() => {\n    if (loading) showErrorMessage('Loading...');\n  }, [loading]);\n  useEffect(() => {\n    if (error) showErrorMessage(error.message);\n  }, [error]);\n  useEffect(() => {\n    if (data) {\n      dispatch(setUser(data.getUserByLogin));\n      console.log(data.getUserByLogin.created);\n      history.push(\"/\");\n    }\n  }, [data]);\n\n  const renderErrorMessage = message => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: 'white',\n        textTransform: 'initial'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  };\n\n  const login = async () => {\n    const response = await getLogin({\n      variables: {\n        username: username,\n        password: password\n      }\n    }); //console.log(data);\n\n    /*\n    dispatch(getLogin({username: username, password: password})).then((res) => {\n        if (res.type === \"user/getLogin/fulfilled\") {\n            if (res.payload.success === false) {\n                setErrorMessage(res.payload.message);\n                return;\n            }\n            history.push(\"/\");\n        }\n    });\n    */\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid px-0\",\n    style: {\n      background: 'rgba(29, 29, 35, 1)',\n      paddingBottom: '5rem',\n      paddingTop: '5rem'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"py-2 form-title\",\n        style: {\n          fontSize: '48px',\n          textShadow: '4px 4px rgba(80, 80, 100, 1)'\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: renderErrorMessage(errorMessage)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          topBorder: true,\n          variant: \"shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"exampleInputUsername1\",\n              className: \"form-label\",\n              children: \"Username *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"username\",\n              className: \"form-control\",\n              id: \"exampleInputUsername1\",\n              \"aria-describedby\": \"usernameHelp\",\n              onChange: e => {\n                setUsername(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"exampleInputPassword1\",\n              className: \"form-label d-flex\",\n              children: \"Password *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              id: \"exampleInputPassword1\",\n              onChange: e => {\n                setPassword(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-login draw meet\",\n            onClick: login,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label mt-4\",\n        children: [\"Don't have an account? Become a critic \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          style: {\n            textDecoration: 'none',\n            color: \"rgba(225, 202, 240, 1)\",\n            borderBottom: '2px solid rgba(80, 80, 100, 1)'\n          },\n          children: \"here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 91\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginPage, \"qaP7aMvxpF2T3h2SYpTfcbcZaVI=\", false, function () {\n  return [useLazyQuery, useHistory, useSelector, useDispatch];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/LoginPage.js"],"names":["React","useState","useEffect","Link","useHistory","Container","useSelector","useDispatch","setUser","useLazyQuery","GET_USER_LOGIN","LoginPage","props","getLogin","data","loading","error","history","isLoggedIn","state","auth","dispatch","username","setUsername","password","setPassword","errorMessage","setErrorMessage","showErrorMessage","message","setTimeout","getUserByLogin","console","log","created","push","renderErrorMessage","color","textTransform","login","response","variables","background","paddingBottom","paddingTop","fontSize","textShadow","e","target","value","textDecoration","borderBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Container from '../Components/Container/Container';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { \n    setUser,\n } from './../features/authentication/authSlice';\nimport { useLazyQuery } from '@apollo/client';\nimport { GET_USER_LOGIN } from '../Graphql/Queries';\n\nconst LoginPage = (props) => {\n    const [getLogin, {data, loading, error}] = useLazyQuery(GET_USER_LOGIN);\n    const history = useHistory();\n    const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\n    const dispatch = useDispatch();\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const showErrorMessage = (message) => {\n        setErrorMessage(message);\n\n        setTimeout(() => {\n            setErrorMessage('');\n        }, 3000);\n    }\n\n    useEffect(() => {\n        if (loading) showErrorMessage('Loading...');\n    }, [loading]);\n\n    useEffect(() => {\n        if (error) showErrorMessage(error.message);\n    }, [error]);\n\n    useEffect(() => {\n        if (data) {\n            dispatch(setUser(data.getUserByLogin));\n            console.log(data.getUserByLogin.created)\n            history.push(\"/\");\n        }\n    }, [data]);\n     \n    const renderErrorMessage = (message) => {\n        return(\n            <span style={{\n                color: 'white',\n                textTransform: 'initial'\n            }}>{message}</span>\n        )\n    }\n    \n    const login = async () => {\n        const response = await getLogin({\n            variables: {\n                username: username,\n                password: password\n            }\n        })\n        //console.log(data);\n\n        /*\n        dispatch(getLogin({username: username, password: password})).then((res) => {\n            if (res.type === \"user/getLogin/fulfilled\") {\n                if (res.payload.success === false) {\n                    setErrorMessage(res.payload.message);\n                    return;\n                }\n                history.push(\"/\");\n            }\n        });\n        */\n    }\n    \n    return (\n        <div className=\"container-fluid px-0\" style={{\n            background: 'rgba(29, 29, 35, 1)',\n            paddingBottom: '5rem',\n            paddingTop: '5rem',\n        }}>\n            <div className=\"container-fluid px-4\">\n                <h1 className=\"py-2 form-title\" style={{\n                    fontSize: '48px',\n                    textShadow: '4px 4px rgba(80, 80, 100, 1)',\n                }}>Login</h1>\n\n                <div>\n                    {renderErrorMessage(errorMessage)}\n                </div>\n                \n\n                <form>\n                <Container topBorder variant=\"shadow\">\n                <div className=\"mb-3\">\n                    <label htmlFor=\"exampleInputUsername1\" className=\"form-label\">Username *</label>\n                    <input type=\"username\" className=\"form-control\" id=\"exampleInputUsername1\" aria-describedby=\"usernameHelp\"\n                        onChange={(e) => {\n                            setUsername(e.target.value);\n                        }}\n                    />\n                </div>\n\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"exampleInputPassword1\" className=\"form-label d-flex\">Password *</label>\n                        <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\"\n                            onChange={(e) => {\n                                setPassword(e.target.value);\n                            }}\n                        />\n                    </div>\n                \n                <button type=\"button\" className=\"btn-login draw meet\"\n                    onClick={login}\n                >Login</button>\n                </Container>\n                </form>\n\n                <label className=\"form-label mt-4\">Don't have an account? Become a critic <Link to=\"/register\"\n                    style={{\n                        textDecoration: 'none',\n                        color: \"rgba(225, 202, 240, 1)\",\n                        borderBottom: '2px solid rgba(80, 80, 100, 1)'\n                    }}\n                >here.</Link></label>\n\n            </div> \n        </div>\n    )\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}