{"ast":null,"code":"import { createSlice, current } from '@reduxjs/toolkit';\nexport const authSlice = createSlice({\n  name: 'user',\n  initialState: {\n    isLoggedIn: false,\n    user: {},\n    userLikes: []\n  },\n  reducers: {\n    setIsLoggedIn: (state, action) => {\n      state.isLoggedIn = action.payload;\n    },\n    setFirstName: (state, action) => {\n      state.user.firstName = action.payload;\n    },\n    setLastName: (state, action) => {\n      state.user.lastName = action.payload;\n    },\n    setUsername: (state, action) => {\n      state.user.username = action.payload;\n    },\n    setEmail: (state, action) => {\n      state.user.email = action.payload;\n    },\n    setCreated: (state, action) => {\n      state.user.created = action.payload;\n    },\n    setUser: (state, action) => {\n      if (action.payload === null) {\n        state.isLoggedIn = false;\n      } else {\n        state.isLoggedIn = true;\n        state.user = action.payload;\n      }\n    },\n    addUserLike: (state, action) => {\n      state.userLikes.push(action.payload);\n    },\n    removeUserLike: (state, action) => {\n      var delIndex = -1;\n      const tempLikes = current(state).userLikes.map((like, indx) => {\n        if (like.likerId === action.payload.likerId && like.reviewId === action.payload.reviewId) {\n          delIndex = indx;\n        }\n\n        return like;\n      });\n\n      if (delIndex > -1) {\n        tempLikes.splice(delIndex, 1);\n      }\n\n      state.userLikes = tempLikes;\n    }\n  },\n  extraReducers: {}\n});\nexport const {\n  setIsLoggedIn,\n  setUser,\n  setFirstName,\n  setLastName,\n  setPassword,\n  setUsername,\n  setEmail,\n  addUserLike,\n  removeUserLike\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"sources":["/Users/daniel/Desktop/Projects/FilmCritic/client/src/features/authentication/authSlice.js"],"names":["createSlice","current","authSlice","name","initialState","isLoggedIn","user","userLikes","reducers","setIsLoggedIn","state","action","payload","setFirstName","firstName","setLastName","lastName","setUsername","username","setEmail","email","setCreated","created","setUser","addUserLike","push","removeUserLike","delIndex","tempLikes","map","like","indx","likerId","reviewId","splice","extraReducers","setPassword","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice, current } from '@reduxjs/toolkit';\n\nexport const authSlice = createSlice({\n    name: 'user',\n    initialState: {\n        isLoggedIn: false,\n        user: {},\n        userLikes: []\n    },\n    reducers: {\n        setIsLoggedIn: (state, action) => {\n            state.isLoggedIn = action.payload;\n        },\n        setFirstName: (state, action) => {\n            state.user.firstName = action.payload;\n        },\n        setLastName: (state, action) => {\n            state.user.lastName = action.payload;\n        },\n        setUsername: (state, action) => {\n            state.user.username = action.payload;\n        },\n        setEmail: (state, action) => {\n            state.user.email = action.payload;\n        },\n        setCreated: (state, action) => {\n            state.user.created = action.payload;\n        },\n        setUser: (state, action) => {\n            if (action.payload === null) {\n               state.isLoggedIn = false;\n            } else {\n                state.isLoggedIn = true;\n                state.user = action.payload;\n            }\n        },\n        addUserLike: (state, action) => {\n            state.userLikes.push(action.payload);\n        },\n        removeUserLike: (state, action) => {\n            var delIndex = -1;\n            const tempLikes = current(state).userLikes.map((like, indx) => {\n                if (like.likerId === action.payload.likerId && like.reviewId === action.payload.reviewId) {\n                    delIndex = indx;\n                }\n                return like;\n            });\n            if (delIndex > -1) {\n                tempLikes.splice(delIndex, 1);\n            }\n            state.userLikes = tempLikes;\n        }\n    },\n    extraReducers: {\n    }\n});\n\nexport const { setIsLoggedIn, setUser, setFirstName, setLastName, setPassword, setUsername, setEmail, addUserLike, removeUserLike } = authSlice.actions;\n\n\n\n\nexport default authSlice.reducer;"]},"metadata":{},"sourceType":"module"}