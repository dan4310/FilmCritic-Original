{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/Rating/Rating.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Rating = ({\n  style,\n  children,\n  score,\n  variant,\n  size,\n  className\n}) => {\n  const baseStyles = {\n    borderRadius: '50%',\n    background: 'rgba(80, 80, 100, 1)',\n    boxShadow: '-2px -2px rgba(225, 202, 240, 1)',\n    background: 'rgba(80, 80, 100, 1)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  };\n  const containerStyleSmall = {\n    width: '36px',\n    height: '36px',\n    padding: '8px',\n    fontSize: '14px',\n    fontWeight: '500',\n    textShadow: '1px 1px rgba(29, 29, 35, 1)'\n  };\n  const containerStyleLarge = {\n    width: '66px',\n    height: '66px',\n    fontWeight: '800',\n    padding: '12px',\n    fontSize: '24px',\n    textShadow: '2px 2px rgba(29, 29, 35, 1)'\n  };\n\n  const sizeStyles = size => {\n    switch (size) {\n      case 'small':\n        return containerStyleSmall;\n\n      case 'large':\n        return containerStyleLarge;\n\n      default:\n        return containerStyleSmall;\n    }\n  };\n\n  const ratingColor = score => {\n    if (score <= 0) {\n      return \"white\";\n    } else if (score <= 5) {\n      return \"red\";\n    } else if (score <= 8) {\n      return \"orange\";\n    } else {\n      return \"lightgreen\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rating-container\" + \" \" + className,\n    style: {\n      color: ratingColor(score),\n      ...baseStyles,\n      ...sizeStyles(size),\n      ...style\n    },\n    children: score === 0 ? \"N/A\" : score\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Rating;\nexport default Rating;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rating\");","map":{"version":3,"sources":["/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/Rating/Rating.js"],"names":["React","Rating","style","children","score","variant","size","className","baseStyles","borderRadius","background","boxShadow","display","alignItems","justifyContent","containerStyleSmall","width","height","padding","fontSize","fontWeight","textShadow","containerStyleLarge","sizeStyles","ratingColor","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,KAAnB;AAA0BC,EAAAA,OAA1B;AAAmCC,EAAAA,IAAnC;AAAyCC,EAAAA;AAAzC,CAAD,KAA0D;AAErE,QAAMC,UAAU,GAAG;AACfC,IAAAA,YAAY,EAAE,KADC;AAEfC,IAAAA,UAAU,EAAE,sBAFG;AAGfC,IAAAA,SAAS,EAAE,kCAHI;AAIfD,IAAAA,UAAU,EAAE,sBAJG;AAKfE,IAAAA,OAAO,EAAE,MALM;AAMfC,IAAAA,UAAU,EAAE,QANG;AAOfC,IAAAA,cAAc,EAAE;AAPD,GAAnB;AAUA,QAAMC,mBAAmB,GAAG;AACxBC,IAAAA,KAAK,EAAE,MADiB;AAExBC,IAAAA,MAAM,EAAE,MAFgB;AAGxBC,IAAAA,OAAO,EAAE,KAHe;AAIxBC,IAAAA,QAAQ,EAAE,MAJc;AAKxBC,IAAAA,UAAU,EAAE,KALY;AAMxBC,IAAAA,UAAU,EAAE;AANY,GAA5B;AAQA,QAAMC,mBAAmB,GAAG;AACxBN,IAAAA,KAAK,EAAE,MADiB;AAExBC,IAAAA,MAAM,EAAE,MAFgB;AAGxBG,IAAAA,UAAU,EAAE,KAHY;AAIxBF,IAAAA,OAAO,EAAE,MAJe;AAKxBC,IAAAA,QAAQ,EAAE,MALc;AAMxBE,IAAAA,UAAU,EAAE;AANY,GAA5B;;AASA,QAAME,UAAU,GAAIjB,IAAD,IAAU;AACzB,YAAQA,IAAR;AACI,WAAK,OAAL;AACI,eAAOS,mBAAP;;AACJ,WAAK,OAAL;AACI,eAAOO,mBAAP;;AACJ;AACI,eAAOP,mBAAP;AANR;AAQH,GATD;;AAYA,QAAMS,WAAW,GAAIpB,KAAD,IAAW;AAC3B,QAAIA,KAAK,IAAI,CAAb,EAAgB;AACZ,aAAO,OAAP;AACH,KAFD,MAEO,IAAIA,KAAK,IAAI,CAAb,EAAgB;AACnB,aAAO,KAAP;AACH,KAFM,MAEA,IAAIA,KAAK,IAAI,CAAb,EAAgB;AACnB,aAAO,QAAP;AACH,KAFM,MAEA;AACH,aAAO,YAAP;AACH;AACJ,GAVD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAE,qBAAqB,GAArB,GAA2BG,SAA3C;AAAsD,IAAA,KAAK,EAAE;AACzDkB,MAAAA,KAAK,EAAED,WAAW,CAACpB,KAAD,CADuC;AAEzD,SAAGI,UAFsD;AAGzD,SAAGe,UAAU,CAACjB,IAAD,CAH4C;AAIzD,SAAGJ;AAJsD,KAA7D;AAAA,cAMKE,KAAK,KAAK,CAAV,GAAc,KAAd,GAAsBA;AAN3B;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA/DD;;KAAMH,M;AAiEN,eAAeA,MAAf","sourcesContent":["import React from 'react';\n\nconst Rating = ({ style, children, score, variant, size, className }) => {\n\n    const baseStyles = {\n        borderRadius: '50%',\n        background: 'rgba(80, 80, 100, 1)',\n        boxShadow: '-2px -2px rgba(225, 202, 240, 1)',\n        background: 'rgba(80, 80, 100, 1)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n    \n    const containerStyleSmall = {\n        width: '36px',\n        height: '36px',\n        padding: '8px',\n        fontSize: '14px',\n        fontWeight: '500',\n        textShadow: '1px 1px rgba(29, 29, 35, 1)'\n    }\n    const containerStyleLarge = {\n        width: '66px',\n        height: '66px',\n        fontWeight: '800',\n        padding: '12px',\n        fontSize: '24px',\n        textShadow: '2px 2px rgba(29, 29, 35, 1)'\n    }\n\n    const sizeStyles = (size) => {\n        switch (size) {\n            case 'small':\n                return containerStyleSmall;\n            case 'large':\n                return containerStyleLarge;\n            default:\n                return containerStyleSmall;\n        }\n    }\n   \n\n    const ratingColor = (score) => {\n        if (score <= 0) {\n            return \"white\";\n        } else if (score <= 5) {\n            return \"red\";\n        } else if (score <= 8) {\n            return \"orange\";\n        } else {\n            return \"lightgreen\";\n        }\n    }\n\n    return (\n        <div className={\"rating-container\" + \" \" + className} style={{\n            color: ratingColor(score),\n            ...baseStyles,\n            ...sizeStyles(size),\n            ...style,\n        }}>\n            {score === 0 ? \"N/A\" : score}\n        </div>\n    )\n}\n\nexport default Rating;"]},"metadata":{},"sourceType":"module"}