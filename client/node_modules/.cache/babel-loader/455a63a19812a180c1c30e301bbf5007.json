{"ast":null,"code":"import axios from 'axios';\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nexport const authSlice = createSlice({\n  name: 'user',\n  initialState: {\n    isLoggedIn: false,\n    user: {\n      id: -1,\n      firstName: '',\n      lastName: '',\n      username: '',\n      password: '',\n      email: '',\n      created: ''\n    }\n  },\n  reducers: {\n    setIsLoggedIn: (state, action) => {\n      state.isLoggedIn = action.payload;\n    },\n    setFirstName: (state, action) => {\n      state.user.firstName = action.payload;\n    },\n    setLastName: (state, action) => {\n      state.user.lastName = action.payload;\n    },\n    setUsername: (state, action) => {\n      state.user.username = action.payload;\n    },\n    setEmail: (state, action) => {\n      state.user.email = action.payload;\n    },\n    setCreated: (state, action) => {\n      state.user.created = action.payload;\n    },\n    setUser: (state, action) => {\n      if (action.payload === null) {\n        state.isLoggedIn = false;\n      } else {\n        state.isLoggedIn = true;\n        state.user = action.payload;\n      }\n    }\n  }\n});\nexport const {\n  setIsLoggedIn,\n  setUser,\n  setFirstName,\n  setLastName,\n  setPassword,\n  setUsername,\n  setEmail\n} = authSlice.actions;\nexport const getLogin = (username, password) => createAsyncThunk('user/loginStatus', async () => {\n  await axios.post(\"http://localhost:3001/login\", {\n    username: username,\n    password: password\n  }).then(response => {\n    if (response.data.message) {\n      console.log(response.data.message);\n    } else {\n      console.log(response.data);\n    }\n  });\n});\nexport default authSlice.reducer;","map":{"version":3,"sources":["/Users/daniel/Desktop/Projects/FilmCritic/client/src/features/authentication/authSlice.js"],"names":["axios","createSlice","createAsyncThunk","authSlice","name","initialState","isLoggedIn","user","id","firstName","lastName","username","password","email","created","reducers","setIsLoggedIn","state","action","payload","setFirstName","setLastName","setUsername","setEmail","setCreated","setUser","setPassword","actions","getLogin","post","then","response","data","message","console","log","reducer"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const authSlice = createSlice({\n    name: 'user',\n    initialState: {\n        isLoggedIn: false,\n        user: {\n            id: -1,\n            firstName: '',\n            lastName: '',\n            username: '',\n            password: '',\n            email: '',\n            created: '',\n        }\n\n    },\n    reducers: {\n        setIsLoggedIn: (state, action) => {\n            state.isLoggedIn = action.payload;\n        },\n        setFirstName: (state, action) => {\n            state.user.firstName = action.payload;\n        },\n        setLastName: (state, action) => {\n            state.user.lastName = action.payload;\n        },\n        setUsername: (state, action) => {\n            state.user.username = action.payload;\n        },\n        setEmail: (state, action) => {\n            state.user.email = action.payload;\n        },\n        setCreated: (state, action) => {\n            state.user.created = action.payload;\n        },\n        setUser: (state, action) => {\n            if (action.payload === null) {\n               state.isLoggedIn = false;\n            } else {\n                state.isLoggedIn = true;\n                state.user = action.payload;\n            }\n        }\n    }\n});\n\nexport const { setIsLoggedIn, setUser, setFirstName, setLastName, setPassword, setUsername, setEmail } = authSlice.actions;\n\nexport const getLogin = (username, password) => createAsyncThunk('user/loginStatus', async () => {\n    \n    await axios.post(\"http://localhost:3001/login\", {\n              username: username,\n              password: password,\n          }).then((response) => {\n              if (response.data.message) {\n                  console.log(response.data.message);\n              } else {\n                  console.log(response.data);\n              }\n          });\n  })\n\n\nexport default authSlice.reducer;"]},"metadata":{},"sourceType":"module"}