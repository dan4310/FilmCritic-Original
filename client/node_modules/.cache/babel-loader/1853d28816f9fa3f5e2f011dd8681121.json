{"ast":null,"code":"import axios from 'axios';\nimport { createSlice, createAsyncThunk, current } from '@reduxjs/toolkit';\nexport const getReviews = createAsyncThunk('movie/getReviews', async ({\n  movieId\n}) => {\n  return await axios.get(\"http://localhost:3001/getReviews\", {\n    params: {\n      movieId: movieId\n    }\n  }).then(response => {\n    if (response.data.message) {\n      console.log(response.data.message);\n      return null;\n    } else {\n      return response.data;\n    }\n  });\n});\nexport const addLike = createAsyncThunk('review/addLike', async ({\n  reviewId,\n  userId,\n  likeDate\n}) => {\n  return await axios.post(\"http://localhost:3001/addLike\", {\n    reviewId: reviewId,\n    likerId: userId,\n    likeDate: likeDate\n  }).then((response, err) => {\n    if (response.data.success === false) {\n      console.log(response.data.message);\n      return null;\n    } else {\n      return response.data;\n    }\n  });\n});\nexport const removeLike = createAsyncThunk('review/removeLike', async ({\n  reviewId,\n  userId\n}) => {\n  return await axios.post(\"http://localhost:3001/removeLike\", {\n    reviewId: reviewId,\n    likerId: userId\n  }).then((response, err) => {\n    if (response.data.success === false) {\n      console.log(response.data.message);\n      return null;\n    } else {\n      return response.data;\n    }\n  });\n});\nexport const movieSlice = createSlice({\n  name: 'movie',\n  initialState: {\n    isLoading: true,\n    movieInfo: {},\n    reviews: []\n  },\n  reducers: {\n    addReview: (state, action) => {\n      var temp = current(state).reviews;\n      console.log('yooo');\n      temp.push(action.payload);\n      state.reviews = temp;\n    },\n    setReviews: (state, action) => {\n      state.reviews = action.payload;\n    },\n    incrimentLike: (state, action) => {\n      var temp = current(state).reviews.map(review => {\n        if (review.id === action.payload) {\n          return { ...review,\n            likes: review.likes + 1\n          };\n        }\n\n        return review;\n      });\n      state.reviews = temp;\n    },\n    decrimentLike: (state, action) => {\n      var temp = current(state).reviews.map(review => {\n        if (review.id === action.payload) {\n          return { ...review,\n            likes: review.likes - 1\n          };\n        }\n\n        return review;\n      });\n      state.reviews = temp;\n    }\n  },\n  extraReducers: {\n    [getReviews.fulfilled]: (state, action) => {\n      if (action.payload) {\n        state.reviews = action.payload;\n        state.isLoading = false;\n      }\n    },\n    [addLike.fulfilled]: (state, action) => {\n      if (action.payload) {\n        state.reviews.map((review, indx) => {\n          if (review.id === action.payload.reviewId) {\n            state.reviews[indx].likes += 1;\n          }\n        });\n      }\n    }\n  }\n});\nexport const {\n  addReview,\n  setReviews,\n  incrimentLike,\n  decrimentLike\n} = movieSlice.actions;\nexport default movieSlice.reducer;","map":{"version":3,"sources":["/Users/daniel/Desktop/Projects/FilmCritic/client/src/features/movie/movieSlice.js"],"names":["axios","createSlice","createAsyncThunk","current","getReviews","movieId","get","params","then","response","data","message","console","log","addLike","reviewId","userId","likeDate","post","likerId","err","success","removeLike","movieSlice","name","initialState","isLoading","movieInfo","reviews","reducers","addReview","state","action","temp","push","payload","setReviews","incrimentLike","map","review","id","likes","decrimentLike","extraReducers","fulfilled","indx","actions","reducer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,gBAAtB,EAAwCC,OAAxC,QAAuD,kBAAvD;AAEA,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,kBAAD,EAAqB,OAAO;AAAEG,EAAAA;AAAF,CAAP,KAAuB;AAClF,SAAO,MAAML,KAAK,CAACM,GAAN,CAAU,kCAAV,EAA8C;AACjDC,IAAAA,MAAM,EAAE;AACNF,MAAAA,OAAO,EAAEA;AADH;AADyC,GAA9C,EAIJG,IAJI,CAIEC,QAAD,IAAc;AAClB,QAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACC,IAAT,CAAcC,OAA1B;AACA,aAAO,IAAP;AACH,KAHD,MAGO;AACH,aAAOF,QAAQ,CAACC,IAAhB;AACH;AACJ,GAXM,CAAb;AAYH,CAbyC,CAAnC;AAgBP,OAAO,MAAMI,OAAO,GAAGZ,gBAAgB,CAAC,gBAAD,EAAmB,OAAO;AAAEa,EAAAA,QAAF;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA;AAApB,CAAP,KAA0C;AAChG,SAAO,MAAMjB,KAAK,CAACkB,IAAN,CAAW,+BAAX,EAA4C;AACrDH,IAAAA,QAAQ,EAAEA,QAD2C;AAErDI,IAAAA,OAAO,EAAEH,MAF4C;AAGrDC,IAAAA,QAAQ,EAAEA;AAH2C,GAA5C,EAIVT,IAJU,CAIL,CAACC,QAAD,EAAWW,GAAX,KAAmB;AACvB,QAAIX,QAAQ,CAACC,IAAT,CAAcW,OAAd,KAA0B,KAA9B,EAAqC;AACjCT,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACC,IAAT,CAAcC,OAA1B;AACA,aAAO,IAAP;AACH,KAHD,MAGO;AACH,aAAOF,QAAQ,CAACC,IAAhB;AACH;AACJ,GAXY,CAAb;AAYH,CAbsC,CAAhC;AAeP,OAAO,MAAMY,UAAU,GAAGpB,gBAAgB,CAAC,mBAAD,EAAsB,OAAO;AAAEa,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAP,KAAgC;AAC5F,SAAO,MAAMhB,KAAK,CAACkB,IAAN,CAAW,kCAAX,EAA+C;AACxDH,IAAAA,QAAQ,EAAEA,QAD8C;AAExDI,IAAAA,OAAO,EAAEH;AAF+C,GAA/C,EAGVR,IAHU,CAGL,CAACC,QAAD,EAAWW,GAAX,KAAmB;AACvB,QAAIX,QAAQ,CAACC,IAAT,CAAcW,OAAd,KAA0B,KAA9B,EAAqC;AACjCT,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACC,IAAT,CAAcC,OAA1B;AACA,aAAO,IAAP;AACH,KAHD,MAGO;AACH,aAAOF,QAAQ,CAACC,IAAhB;AACH;AACJ,GAVY,CAAb;AAWH,CAZyC,CAAnC;AAcP,OAAO,MAAMa,UAAU,GAAGtB,WAAW,CAAC;AAClCuB,EAAAA,IAAI,EAAE,OAD4B;AAElCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,SAAS,EAAE,IADD;AAEVC,IAAAA,SAAS,EAAE,EAFD;AAKVC,IAAAA,OAAO,EAAE;AALC,GAFoB;AASlCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1B,UAAIC,IAAI,GAAG9B,OAAO,CAAC4B,KAAD,CAAP,CAAeH,OAA1B;AACAhB,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAoB,MAAAA,IAAI,CAACC,IAAL,CAAUF,MAAM,CAACG,OAAjB;AACAJ,MAAAA,KAAK,CAACH,OAAN,GAAgBK,IAAhB;AACH,KANK;AAONG,IAAAA,UAAU,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAC3BD,MAAAA,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACG,OAAvB;AACH,KATK;AAUNE,IAAAA,aAAa,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC9B,UAAIC,IAAI,GAAG9B,OAAO,CAAC4B,KAAD,CAAP,CAAeH,OAAf,CAAuBU,GAAvB,CAA4BC,MAAD,IAAY;AAC9C,YAAIA,MAAM,CAACC,EAAP,KAAcR,MAAM,CAACG,OAAzB,EAAkC;AAC9B,iBAAO,EACH,GAAGI,MADA;AAEHE,YAAAA,KAAK,EAAEF,MAAM,CAACE,KAAP,GAAe;AAFnB,WAAP;AAIH;;AACD,eAAOF,MAAP;AACH,OARU,CAAX;AASAR,MAAAA,KAAK,CAACH,OAAN,GAAgBK,IAAhB;AACH,KArBK;AAsBNS,IAAAA,aAAa,EAAE,CAACX,KAAD,EAAQC,MAAR,KAAmB;AAC9B,UAAIC,IAAI,GAAG9B,OAAO,CAAC4B,KAAD,CAAP,CAAeH,OAAf,CAAuBU,GAAvB,CAA4BC,MAAD,IAAY;AAC9C,YAAIA,MAAM,CAACC,EAAP,KAAcR,MAAM,CAACG,OAAzB,EAAkC;AAC9B,iBAAO,EACH,GAAGI,MADA;AAEHE,YAAAA,KAAK,EAAEF,MAAM,CAACE,KAAP,GAAe;AAFnB,WAAP;AAIH;;AACD,eAAOF,MAAP;AACH,OARU,CAAX;AASAR,MAAAA,KAAK,CAACH,OAAN,GAAgBK,IAAhB;AACH;AAjCK,GATwB;AA4ClCU,EAAAA,aAAa,EAAE;AACX,KAACvC,UAAU,CAACwC,SAAZ,GAAwB,CAACb,KAAD,EAAQC,MAAR,KAAmB;AACvC,UAAIA,MAAM,CAACG,OAAX,EAAoB;AAChBJ,QAAAA,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACG,OAAvB;AACAJ,QAAAA,KAAK,CAACL,SAAN,GAAkB,KAAlB;AACH;AACJ,KANU;AAOX,KAACZ,OAAO,CAAC8B,SAAT,GAAqB,CAACb,KAAD,EAAQC,MAAR,KAAmB;AACpC,UAAIA,MAAM,CAACG,OAAX,EAAoB;AAChBJ,QAAAA,KAAK,CAACH,OAAN,CAAcU,GAAd,CAAkB,CAACC,MAAD,EAASM,IAAT,KAAkB;AAChC,cAAIN,MAAM,CAACC,EAAP,KAAcR,MAAM,CAACG,OAAP,CAAepB,QAAjC,EAA2C;AACvCgB,YAAAA,KAAK,CAACH,OAAN,CAAciB,IAAd,EAAoBJ,KAApB,IAA6B,CAA7B;AACH;AACJ,SAJD;AAKH;AACJ;AAfU;AA5CmB,CAAD,CAA9B;AAgEP,OAAO,MAAM;AAAEX,EAAAA,SAAF;AAAaM,EAAAA,UAAb;AAAyBC,EAAAA,aAAzB;AAAwCK,EAAAA;AAAxC,IAA0DnB,UAAU,CAACuB,OAA3E;AAKP,eAAevB,UAAU,CAACwB,OAA1B","sourcesContent":["import axios from 'axios';\nimport { createSlice, createAsyncThunk, current } from '@reduxjs/toolkit';\n\nexport const getReviews = createAsyncThunk('movie/getReviews', async ({ movieId }) => {\n    return await axios.get(\"http://localhost:3001/getReviews\", {\n              params: {\n                movieId: movieId,\n              }\n          }).then((response) => {\n              if (response.data.message) {\n                  console.log(response.data.message);\n                  return null;\n              } else {\n                  return response.data;\n              }\n          });\n});\n\n\nexport const addLike = createAsyncThunk('review/addLike', async ({ reviewId, userId, likeDate }) => {\n    return await axios.post(\"http://localhost:3001/addLike\", {\n        reviewId: reviewId,\n        likerId: userId,\n        likeDate: likeDate,\n    }).then((response, err) => {\n        if (response.data.success === false) {\n            console.log(response.data.message);\n            return null;\n        } else {\n            return response.data;\n        }\n    })\n});\n\nexport const removeLike = createAsyncThunk('review/removeLike', async ({ reviewId, userId }) => {\n    return await axios.post(\"http://localhost:3001/removeLike\", {\n        reviewId: reviewId,\n        likerId: userId\n    }).then((response, err) => {\n        if (response.data.success === false) {\n            console.log(response.data.message);\n            return null;\n        } else {\n            return response.data;\n        }\n    })\n});\n\nexport const movieSlice = createSlice({\n    name: 'movie',\n    initialState: {\n        isLoading: true,\n        movieInfo: {\n            \n        },\n        reviews: []\n    },\n    reducers: {\n        addReview: (state, action) => {\n            var temp = current(state).reviews;\n            console.log('yooo')\n            temp.push(action.payload);\n            state.reviews = temp;\n        },\n        setReviews: (state, action) => {\n            state.reviews = action.payload;\n        },\n        incrimentLike: (state, action) => {\n            var temp = current(state).reviews.map((review) => {\n                if (review.id === action.payload) {\n                    return {\n                        ...review,\n                        likes: review.likes + 1\n                    }\n                }\n                return review;\n            });\n            state.reviews = temp;\n        },\n        decrimentLike: (state, action) => {\n            var temp = current(state).reviews.map((review) => {\n                if (review.id === action.payload) {\n                    return {\n                        ...review,\n                        likes: review.likes - 1\n                    }\n                }\n                return review;\n            });\n            state.reviews = temp;\n        },\n    },\n    extraReducers: {\n        [getReviews.fulfilled]: (state, action) => {\n            if (action.payload) {\n                state.reviews = action.payload;\n                state.isLoading = false;\n            } \n        },\n        [addLike.fulfilled]: (state, action) => {\n            if (action.payload) {\n                state.reviews.map((review, indx) => {\n                    if (review.id === action.payload.reviewId) {\n                        state.reviews[indx].likes += 1;\n                    }\n                })\n            }\n        }\n        \n    }\n});\n\nexport const { addReview, setReviews, incrimentLike, decrimentLike } = movieSlice.actions;\n\n\n\n\nexport default movieSlice.reducer;"]},"metadata":{},"sourceType":"module"}