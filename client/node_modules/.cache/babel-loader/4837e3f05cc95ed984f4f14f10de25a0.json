{"ast":null,"code":"import axios from 'axios';\nimport { createSlice, createAsyncThunk, current } from '@reduxjs/toolkit';\nexport const getLogin = createAsyncThunk('user/getLogin', async ({\n  username,\n  password\n}) => {\n  return await axios.post(\"http://localhost:3001/login\", {\n    username: username,\n    password: password\n  }).then(response => {\n    if (response.data.message) {\n      console.log(response.data.message);\n      return null;\n    } else {\n      return response.data;\n    }\n  });\n});\nexport const getRegister = createAsyncThunk('user/getRegister', async ({\n  username,\n  firstName,\n  lastName,\n  password,\n  email\n}) => {\n  return await axios.post('http://localhost:3001/register', {\n    username: username,\n    password: password,\n    firstName: firstName,\n    lastName: lastName,\n    email: email,\n    created: new Date().toISOString().slice(0, 19).replace('T', ' ')\n  }).then((response, err) => {\n    if (response.data.success === false) {\n      console.log(response.data.message);\n      return null;\n    } else {\n      console.log(response.data.user);\n      return response.data.user;\n    }\n  });\n});\nexport const getUserLikes = createAsyncThunk('user/getUserLikes', async ({\n  userId\n}) => {\n  return await axios.get(\"http://localhost:3001/getUserLikes\", {\n    params: {\n      userId: userId\n    }\n  }).then(response => {\n    if (response.data.message) {\n      console.log(response.data.message);\n      return null;\n    } else {\n      return response.data;\n    }\n  });\n});\nexport const authSlice = createSlice({\n  name: 'user',\n  initialState: {\n    isLoggedIn: false,\n    user: {\n      id: -1,\n      firstName: '',\n      lastName: '',\n      username: '',\n      password: '',\n      email: '',\n      created: ''\n    },\n    userLikes: []\n  },\n  reducers: {\n    setIsLoggedIn: (state, action) => {\n      state.isLoggedIn = action.payload;\n    },\n    setFirstName: (state, action) => {\n      state.user.firstName = action.payload;\n    },\n    setLastName: (state, action) => {\n      state.user.lastName = action.payload;\n    },\n    setUsername: (state, action) => {\n      state.user.username = action.payload;\n    },\n    setEmail: (state, action) => {\n      state.user.email = action.payload;\n    },\n    setCreated: (state, action) => {\n      state.user.created = action.payload;\n    },\n    setUser: (state, action) => {\n      if (action.payload === null) {\n        state.isLoggedIn = false;\n      } else {\n        state.isLoggedIn = true;\n        state.user = action.payload;\n      }\n    },\n    addUserLike: (state, action) => {\n      state.userLikes.push(action.payload);\n    },\n    removeUserLike: (state, action) => {\n      var delIndex = -1;\n      const tempLikes = current(state).userLikes.map((like, indx) => {\n        console.log(like.likerId, like.reviewId, action.payload.likerId, action.payload.movieId);\n\n        if (like.likerId === action.payload.likerId && like.reviewId === action.payload.reviewId) {\n          delIndex = indx;\n        }\n\n        return like;\n      });\n\n      if (delIndex > -1) {\n        tempLikes.splice(delIndex, 1);\n      }\n\n      state.userLikes = tempLikes;\n      console.log(tempLikes);\n    }\n  },\n  extraReducers: {\n    [getLogin.fulfilled]: (state, action) => {\n      if (action.payload) {\n        state.user = action.payload;\n        state.isLoggedIn = true;\n      }\n    },\n    [getRegister.fulfilled]: (state, action) => {\n      if (action.payload) {\n        state.user = action.payload;\n        state.isLoggedIn = true;\n      }\n    },\n    [getUserLikes.fulfilled]: (state, action) => {\n      if (action.payload) {\n        state.userLikes = action.payload.result;\n      }\n    }\n  }\n});\nexport const {\n  setIsLoggedIn,\n  setUser,\n  setFirstName,\n  setLastName,\n  setPassword,\n  setUsername,\n  setEmail,\n  addUserLike,\n  removeUserLike\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"sources":["/Users/daniel/Desktop/Projects/FilmCritic/client/src/features/authentication/authSlice.js"],"names":["axios","createSlice","createAsyncThunk","current","getLogin","username","password","post","then","response","data","message","console","log","getRegister","firstName","lastName","email","created","Date","toISOString","slice","replace","err","success","user","getUserLikes","userId","get","params","authSlice","name","initialState","isLoggedIn","id","userLikes","reducers","setIsLoggedIn","state","action","payload","setFirstName","setLastName","setUsername","setEmail","setCreated","setUser","addUserLike","push","removeUserLike","delIndex","tempLikes","map","like","indx","likerId","reviewId","movieId","splice","extraReducers","fulfilled","result","setPassword","actions","reducer"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { createSlice, createAsyncThunk, current } from '@reduxjs/toolkit';\n\nexport const getLogin = createAsyncThunk('user/getLogin', async ({ username, password}) => {\n    return await axios.post(\"http://localhost:3001/login\", {\n              username: username,\n              password: password,\n          }).then((response) => {\n              if (response.data.message) {\n                  console.log(response.data.message);\n                  return null;\n              } else {\n                  return response.data;\n              }\n          });\n  })\n\nexport const getRegister = createAsyncThunk('user/getRegister', async ({ username, firstName, lastName, password, email}) => {\n    return await axios.post('http://localhost:3001/register', {\n        username: username,\n        password: password,\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        created: new Date().toISOString().slice(0, 19).replace('T', ' ')\n    }).then((response, err) => {\n        if (response.data.success === false) {\n            console.log(response.data.message);\n            return null;\n        } else {\n            console.log(response.data.user);\n            return response.data.user;\n        }\n    });\n});\n\nexport const getUserLikes = createAsyncThunk('user/getUserLikes', async ({ userId }) => {\n    return await axios.get(\"http://localhost:3001/getUserLikes\", { params: {\n        userId: userId\n    } }).then((response) => {\n              if (response.data.message) {\n                  console.log(response.data.message);\n                  return null;\n              } else {\n                  return response.data;\n              }\n          });\n  })\n\nexport const authSlice = createSlice({\n    name: 'user',\n    initialState: {\n        isLoggedIn: false,\n        user: {\n            id: -1,\n            firstName: '',\n            lastName: '',\n            username: '',\n            password: '',\n            email: '',\n            created: '',\n        },\n        userLikes: []\n    },\n    reducers: {\n        setIsLoggedIn: (state, action) => {\n            state.isLoggedIn = action.payload;\n        },\n        setFirstName: (state, action) => {\n            state.user.firstName = action.payload;\n        },\n        setLastName: (state, action) => {\n            state.user.lastName = action.payload;\n        },\n        setUsername: (state, action) => {\n            state.user.username = action.payload;\n        },\n        setEmail: (state, action) => {\n            state.user.email = action.payload;\n        },\n        setCreated: (state, action) => {\n            state.user.created = action.payload;\n        },\n        setUser: (state, action) => {\n            if (action.payload === null) {\n               state.isLoggedIn = false;\n            } else {\n                state.isLoggedIn = true;\n                state.user = action.payload;\n            }\n        },\n        addUserLike: (state, action) => {\n            state.userLikes.push(action.payload);\n        },\n        removeUserLike: (state, action) => {\n            \n            var delIndex = -1;\n            const tempLikes = current(state).userLikes.map((like, indx) => {\n                console.log(like.likerId,like.reviewId,action.payload.likerId,action.payload.movieId)\n                if (like.likerId === action.payload.likerId && like.reviewId === action.payload.reviewId) {\n                    delIndex = indx;\n                }\n                return like;\n            });\n            if (delIndex > -1) {\n                tempLikes.splice(delIndex, 1);\n            }\n            state.userLikes = tempLikes;\n            console.log(tempLikes);\n        }\n    },\n    extraReducers: {\n        [getLogin.fulfilled]: (state, action) => {\n            if (action.payload) {\n                state.user = action.payload;\n                state.isLoggedIn = true;\n            }\n        },\n        [getRegister.fulfilled]: (state, action) => {\n            if (action.payload) {\n                state.user = action.payload;\n                state.isLoggedIn = true;\n            }\n        },\n        [getUserLikes.fulfilled]: (state, action) => {\n            if (action.payload) {\n                state.userLikes = action.payload.result;\n            }\n        }\n    }\n});\n\nexport const { setIsLoggedIn, setUser, setFirstName, setLastName, setPassword, setUsername, setEmail, addUserLike, removeUserLike } = authSlice.actions;\n\n\n\n\nexport default authSlice.reducer;"]},"metadata":{},"sourceType":"module"}