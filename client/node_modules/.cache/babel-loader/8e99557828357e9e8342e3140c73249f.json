{"ast":null,"code":"import { createSlice, createAsyncThunk, current } from '@reduxjs/toolkit';\nexport const authSlice = createSlice({\n  name: 'user',\n  initialState: {\n    isLoggedIn: false,\n    user: {\n      id: -1,\n      firstName: '',\n      lastName: '',\n      username: '',\n      password: '',\n      email: '',\n      created: ''\n    },\n    userLikes: []\n  },\n  reducers: {\n    setIsLoggedIn: (state, action) => {\n      state.isLoggedIn = action.payload;\n    },\n    setFirstName: (state, action) => {\n      state.user.firstName = action.payload;\n    },\n    setLastName: (state, action) => {\n      state.user.lastName = action.payload;\n    },\n    setUsername: (state, action) => {\n      state.user.username = action.payload;\n    },\n    setEmail: (state, action) => {\n      state.user.email = action.payload;\n    },\n    setCreated: (state, action) => {\n      state.user.created = action.payload;\n    },\n    setUser: (state, action) => {\n      if (action.payload === null) {\n        state.isLoggedIn = false;\n      } else {\n        state.isLoggedIn = true;\n        state.user = action.payload;\n      }\n    },\n    addUserLike: (state, action) => {\n      state.userLikes.push(action.payload);\n    },\n    removeUserLike: (state, action) => {\n      var delIndex = -1;\n      const tempLikes = current(state).userLikes.map((like, indx) => {\n        if (like.likerId === action.payload.likerId && like.reviewId === action.payload.reviewId) {\n          delIndex = indx;\n        }\n\n        return like;\n      });\n\n      if (delIndex > -1) {\n        tempLikes.splice(delIndex, 1);\n      }\n\n      state.userLikes = tempLikes;\n    }\n  },\n  extraReducers: {\n    [getLogin.fulfilled]: (state, action) => {\n      if (action.payload.success === true) {\n        state.user = action.payload.result;\n        state.isLoggedIn = true;\n      }\n    },\n    [getRegister.fulfilled]: (state, action) => {\n      if (action.payload.success === true) {\n        state.user = action.payload;\n        state.isLoggedIn = true;\n      }\n    },\n    [getUserLikes.fulfilled]: (state, action) => {\n      if (action.payload.success === true) {\n        state.userLikes = action.payload.result;\n      }\n    }\n  }\n});\nexport const {\n  setIsLoggedIn,\n  setUser,\n  setFirstName,\n  setLastName,\n  setPassword,\n  setUsername,\n  setEmail,\n  addUserLike,\n  removeUserLike\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"sources":["/Users/daniel/Desktop/Projects/FilmCritic/client/src/features/authentication/authSlice.js"],"names":["createSlice","createAsyncThunk","current","authSlice","name","initialState","isLoggedIn","user","id","firstName","lastName","username","password","email","created","userLikes","reducers","setIsLoggedIn","state","action","payload","setFirstName","setLastName","setUsername","setEmail","setCreated","setUser","addUserLike","push","removeUserLike","delIndex","tempLikes","map","like","indx","likerId","reviewId","splice","extraReducers","getLogin","fulfilled","success","result","getRegister","getUserLikes","setPassword","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice, createAsyncThunk, current } from '@reduxjs/toolkit';\n\nexport const authSlice = createSlice({\n    name: 'user',\n    initialState: {\n        isLoggedIn: false,\n        user: {\n            id: -1,\n            firstName: '',\n            lastName: '',\n            username: '',\n            password: '',\n            email: '',\n            created: '',\n        },\n        userLikes: []\n    },\n    reducers: {\n        setIsLoggedIn: (state, action) => {\n            state.isLoggedIn = action.payload;\n        },\n        setFirstName: (state, action) => {\n            state.user.firstName = action.payload;\n        },\n        setLastName: (state, action) => {\n            state.user.lastName = action.payload;\n        },\n        setUsername: (state, action) => {\n            state.user.username = action.payload;\n        },\n        setEmail: (state, action) => {\n            state.user.email = action.payload;\n        },\n        setCreated: (state, action) => {\n            state.user.created = action.payload;\n        },\n        setUser: (state, action) => {\n            if (action.payload === null) {\n               state.isLoggedIn = false;\n            } else {\n                state.isLoggedIn = true;\n                state.user = action.payload;\n            }\n        },\n        addUserLike: (state, action) => {\n            state.userLikes.push(action.payload);\n        },\n        removeUserLike: (state, action) => {\n            var delIndex = -1;\n            const tempLikes = current(state).userLikes.map((like, indx) => {\n                if (like.likerId === action.payload.likerId && like.reviewId === action.payload.reviewId) {\n                    delIndex = indx;\n                }\n                return like;\n            });\n            if (delIndex > -1) {\n                tempLikes.splice(delIndex, 1);\n            }\n            state.userLikes = tempLikes;\n        }\n    },\n    extraReducers: {\n        [getLogin.fulfilled]: (state, action) => {\n            if (action.payload.success === true) {\n                state.user = action.payload.result;\n                state.isLoggedIn = true;\n            }\n        },\n        [getRegister.fulfilled]: (state, action) => {\n            if (action.payload.success === true) {\n                state.user = action.payload;\n                state.isLoggedIn = true;\n            }\n        },\n        [getUserLikes.fulfilled]: (state, action) => {\n            if (action.payload.success === true) {\n                state.userLikes = action.payload.result;\n            }\n        }\n    }\n});\n\nexport const { setIsLoggedIn, setUser, setFirstName, setLastName, setPassword, setUsername, setEmail, addUserLike, removeUserLike } = authSlice.actions;\n\n\n\n\nexport default authSlice.reducer;"]},"metadata":{},"sourceType":"module"}