{"ast":null,"code":"import { createSlice, current } from '@reduxjs/toolkit';\nexport const movieSlice = createSlice({\n  name: 'movie',\n  initialState: {\n    isLoading: true,\n    movieInfo: {},\n    reviews: []\n  },\n  reducers: {\n    addReview: (state, action) => {\n      var temp = current(state).reviews;\n      temp = [...temp, action.payload];\n      state.reviews = temp;\n    },\n    setReviews: (state, action) => {\n      state.reviews = action.payload;\n    },\n    incrimentLike: (state, action) => {\n      var reviewId = action.payload.reviewId;\n      var like = action.payload.like;\n      var temp = current(state);\n      var index = temp.reviews.findIndex(review => review.id === reviewId);\n      temp = temp.reviews[index].likes;\n      temp = [...temp, { ...like\n      }];\n      state.reviews[index].likes = temp;\n    },\n    decrimentLike: (state, action) => {\n      var reviewId = action.payload.reviewId;\n      var likeId = action.payload.likeId;\n      var temp = current(state).reviews;\n      var reviewIndex = temp.findIndex(review => review.id === reviewId);\n      temp = current(state).reviews[reviewIndex].likes;\n      var tempLikes = [];\n\n      for (var i = 0; i < temp.length; i++) {\n        if (temp[i].id !== likeId) {\n          tempLikes.push(temp[i]);\n        }\n      }\n\n      state.reviews[reviewIndex].likes = tempLikes;\n    }\n  },\n  extraReducers: {}\n});\nexport const {\n  addReview,\n  setReviews,\n  incrimentLike,\n  decrimentLike\n} = movieSlice.actions;\nexport default movieSlice.reducer;","map":{"version":3,"sources":["/Users/daniel/Desktop/Projects/FilmCritic/client/src/features/movie/movieSlice.js"],"names":["createSlice","current","movieSlice","name","initialState","isLoading","movieInfo","reviews","reducers","addReview","state","action","temp","payload","setReviews","incrimentLike","reviewId","like","index","findIndex","review","id","likes","decrimentLike","likeId","reviewIndex","tempLikes","i","length","push","extraReducers","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,QAAqC,kBAArC;AAEA,OAAO,MAAMC,UAAU,GAAGF,WAAW,CAAC;AAClCG,EAAAA,IAAI,EAAE,OAD4B;AAElCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,SAAS,EAAE,IADD;AAEVC,IAAAA,SAAS,EAAE,EAFD;AAKVC,IAAAA,OAAO,EAAE;AALC,GAFoB;AASlCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1B,UAAIC,IAAI,GAAGX,OAAO,CAACS,KAAD,CAAP,CAAeH,OAA1B;AACAK,MAAAA,IAAI,GAAG,CAAC,GAAGA,IAAJ,EAAUD,MAAM,CAACE,OAAjB,CAAP;AACAH,MAAAA,KAAK,CAACH,OAAN,GAAgBK,IAAhB;AACH,KALK;AAMNE,IAAAA,UAAU,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC3BD,MAAAA,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACE,OAAvB;AACH,KARK;AASNE,IAAAA,aAAa,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAC9B,UAAIK,QAAQ,GAAGL,MAAM,CAACE,OAAP,CAAeG,QAA9B;AACA,UAAIC,IAAI,GAAGN,MAAM,CAACE,OAAP,CAAeI,IAA1B;AAEA,UAAIL,IAAI,GAAGX,OAAO,CAACS,KAAD,CAAlB;AACA,UAAIQ,KAAK,GAAGN,IAAI,CAACL,OAAL,CAAaY,SAAb,CAAuBC,MAAM,IAAIA,MAAM,CAACC,EAAP,KAAcL,QAA/C,CAAZ;AACAJ,MAAAA,IAAI,GAAGA,IAAI,CAACL,OAAL,CAAaW,KAAb,EAAoBI,KAA3B;AACAV,MAAAA,IAAI,GAAG,CAAC,GAAGA,IAAJ,EAAS,EAAC,GAAGK;AAAJ,OAAT,CAAP;AACAP,MAAAA,KAAK,CAACH,OAAN,CAAcW,KAAd,EAAqBI,KAArB,GAA6BV,IAA7B;AACH,KAlBK;AAmBNW,IAAAA,aAAa,EAAE,CAACb,KAAD,EAAQC,MAAR,KAAmB;AAC9B,UAAIK,QAAQ,GAAGL,MAAM,CAACE,OAAP,CAAeG,QAA9B;AACA,UAAIQ,MAAM,GAAGb,MAAM,CAACE,OAAP,CAAeW,MAA5B;AAEA,UAAIZ,IAAI,GAAGX,OAAO,CAACS,KAAD,CAAP,CAAeH,OAA1B;AACA,UAAIkB,WAAW,GAAGb,IAAI,CAACO,SAAL,CAAeC,MAAM,IAAIA,MAAM,CAACC,EAAP,KAAcL,QAAvC,CAAlB;AAEAJ,MAAAA,IAAI,GAAGX,OAAO,CAACS,KAAD,CAAP,CAAeH,OAAf,CAAuBkB,WAAvB,EAAoCH,KAA3C;AACA,UAAII,SAAS,GAAG,EAAhB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,IAAI,CAACgB,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,YAAIf,IAAI,CAACe,CAAD,CAAJ,CAAQN,EAAR,KAAeG,MAAnB,EAA2B;AACvBE,UAAAA,SAAS,CAACG,IAAV,CAAejB,IAAI,CAACe,CAAD,CAAnB;AACH;AACJ;;AACDjB,MAAAA,KAAK,CAACH,OAAN,CAAckB,WAAd,EAA2BH,KAA3B,GAAmCI,SAAnC;AACH;AAlCK,GATwB;AA6ClCI,EAAAA,aAAa,EAAE;AA7CmB,CAAD,CAA9B;AAkDP,OAAO,MAAM;AAAErB,EAAAA,SAAF;AAAaK,EAAAA,UAAb;AAAyBC,EAAAA,aAAzB;AAAwCQ,EAAAA;AAAxC,IAA0DrB,UAAU,CAAC6B,OAA3E;AAKP,eAAe7B,UAAU,CAAC8B,OAA1B","sourcesContent":["import { createSlice, current } from '@reduxjs/toolkit';\n\nexport const movieSlice = createSlice({\n    name: 'movie',\n    initialState: {\n        isLoading: true,\n        movieInfo: {\n            \n        },\n        reviews: []\n    },\n    reducers: {\n        addReview: (state, action) => {\n            var temp = current(state).reviews;\n            temp = [...temp, action.payload];\n            state.reviews = temp;\n        },\n        setReviews: (state, action) => {\n            state.reviews = action.payload;\n        },\n        incrimentLike: (state, action) => {\n            var reviewId = action.payload.reviewId;\n            var like = action.payload.like;\n\n            var temp = current(state)\n            var index = temp.reviews.findIndex(review => review.id === reviewId)\n            temp = temp.reviews[index].likes;\n            temp = [...temp,{...like}];\n            state.reviews[index].likes = temp;\n        },\n        decrimentLike: (state, action) => {\n            var reviewId = action.payload.reviewId;\n            var likeId = action.payload.likeId;\n\n            var temp = current(state).reviews;\n            var reviewIndex = temp.findIndex(review => review.id === reviewId);\n            \n            temp = current(state).reviews[reviewIndex].likes;\n            var tempLikes = [];\n            for (var i = 0; i < temp.length; i++) {\n                if (temp[i].id !== likeId) {\n                    tempLikes.push(temp[i]);\n                }\n            }\n            state.reviews[reviewIndex].likes = tempLikes;\n        },\n    },\n    extraReducers: {\n\n    }\n});\n\nexport const { addReview, setReviews, incrimentLike, decrimentLike } = movieSlice.actions;\n\n\n\n\nexport default movieSlice.reducer;"]},"metadata":{},"sourceType":"module"}