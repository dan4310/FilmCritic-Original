{"ast":null,"code":"import axios from 'axios';\nimport { createSlice, createAsyncThunk, current } from '@reduxjs/toolkit';\nimport { useMutation } from '@apollo/client';\nimport { CREATE_USER } from '../../../../server/src/Schema/Mutations/User';\nconst [createUser, {\n  error\n}] = useMutation(CREATE_USER);\nexport const getLogin = createAsyncThunk('user/getLogin', async ({\n  username,\n  password\n}) => {\n  return await axios.post(\"http://localhost:3001/login\", {\n    username: username,\n    password: password\n  }).then(response => {\n    return response.data;\n  });\n});\n/*\nexport const getRegister = createAsyncThunk('user/getRegister', async ({ username, firstName, lastName, password, email}) => {\n    return await axios.post('http://localhost:3001/register', {\n        username: username,\n        password: password,\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        created: new Date().toISOString().slice(0, 19).replace('T', ' ')\n    }).then((response, err) => {\n        return response.data;\n    });\n});\n*/\n\nexport const register = ({\n  username,\n  password,\n  firstName,\n  lastName,\n  email,\n  created\n}) => {\n  createUser({\n    variables: {\n      username: username,\n      password: password,\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      created: created\n    }\n  });\n};\nexport const getUserLikes = createAsyncThunk('user/getUserLikes', async ({\n  userId\n}) => {\n  return await axios.get(\"http://localhost:3001/getUserLikes\", {\n    params: {\n      userId: userId\n    }\n  }).then(response => {\n    if (response.data.message) {\n      return null;\n    } else {\n      return response.data;\n    }\n  });\n});\nexport const authSlice = createSlice({\n  name: 'user',\n  initialState: {\n    isLoggedIn: false,\n    user: {\n      id: -1,\n      firstName: '',\n      lastName: '',\n      username: '',\n      password: '',\n      email: '',\n      created: ''\n    },\n    userLikes: []\n  },\n  reducers: {\n    setIsLoggedIn: (state, action) => {\n      state.isLoggedIn = action.payload;\n    },\n    setFirstName: (state, action) => {\n      state.user.firstName = action.payload;\n    },\n    setLastName: (state, action) => {\n      state.user.lastName = action.payload;\n    },\n    setUsername: (state, action) => {\n      state.user.username = action.payload;\n    },\n    setEmail: (state, action) => {\n      state.user.email = action.payload;\n    },\n    setCreated: (state, action) => {\n      state.user.created = action.payload;\n    },\n    setUser: (state, action) => {\n      if (action.payload === null) {\n        state.isLoggedIn = false;\n      } else {\n        state.isLoggedIn = true;\n        state.user = action.payload;\n      }\n    },\n    addUserLike: (state, action) => {\n      state.userLikes.push(action.payload);\n    },\n    removeUserLike: (state, action) => {\n      var delIndex = -1;\n      const tempLikes = current(state).userLikes.map((like, indx) => {\n        if (like.likerId === action.payload.likerId && like.reviewId === action.payload.reviewId) {\n          delIndex = indx;\n        }\n\n        return like;\n      });\n\n      if (delIndex > -1) {\n        tempLikes.splice(delIndex, 1);\n      }\n\n      state.userLikes = tempLikes;\n    }\n  },\n  extraReducers: {\n    [getLogin.fulfilled]: (state, action) => {\n      if (action.payload.success === true) {\n        state.user = action.payload.result;\n        state.isLoggedIn = true;\n      }\n    },\n    [getRegister.fulfilled]: (state, action) => {\n      if (action.payload.success === true) {\n        state.user = action.payload;\n        state.isLoggedIn = true;\n      }\n    },\n    [getUserLikes.fulfilled]: (state, action) => {\n      if (action.payload.success === true) {\n        state.userLikes = action.payload.result;\n      }\n    }\n  }\n});\nexport const {\n  setIsLoggedIn,\n  setUser,\n  setFirstName,\n  setLastName,\n  setPassword,\n  setUsername,\n  setEmail,\n  addUserLike,\n  removeUserLike\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"sources":["/Users/daniel/Desktop/Projects/FilmCritic/client/src/features/authentication/authSlice.js"],"names":["axios","createSlice","createAsyncThunk","current","useMutation","CREATE_USER","createUser","error","getLogin","username","password","post","then","response","data","register","firstName","lastName","email","created","variables","getUserLikes","userId","get","params","message","authSlice","name","initialState","isLoggedIn","user","id","userLikes","reducers","setIsLoggedIn","state","action","payload","setFirstName","setLastName","setUsername","setEmail","setCreated","setUser","addUserLike","push","removeUserLike","delIndex","tempLikes","map","like","indx","likerId","reviewId","splice","extraReducers","fulfilled","success","result","getRegister","setPassword","actions","reducer"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { createSlice, createAsyncThunk, current } from '@reduxjs/toolkit';\nimport { useMutation } from '@apollo/client';\nimport { CREATE_USER } from '../../../../server/src/Schema/Mutations/User';\nconst [createUser, { error }] = useMutation(CREATE_USER)\n\nexport const getLogin = createAsyncThunk('user/getLogin', async ({ username, password}) => {\n    return await axios.post(\"http://localhost:3001/login\", {\n              username: username,\n              password: password,\n          }).then((response) => {\n              return response.data;\n          });\n  })\n\n/*\nexport const getRegister = createAsyncThunk('user/getRegister', async ({ username, firstName, lastName, password, email}) => {\n    return await axios.post('http://localhost:3001/register', {\n        username: username,\n        password: password,\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        created: new Date().toISOString().slice(0, 19).replace('T', ' ')\n    }).then((response, err) => {\n        return response.data;\n    });\n});\n*/\n\nexport const register = ({ username, password, firstName, lastName, email, created}) => {\n    createUser({\n        variables: {\n            username: username,\n            password: password,\n            firstName: firstName,\n            lastName: lastName,\n            email: email,\n            created: created,\n        } \n    });\n}\n\nexport const getUserLikes = createAsyncThunk('user/getUserLikes', async ({ userId }) => {\n    return await axios.get(\"http://localhost:3001/getUserLikes\", { params: {\n        userId: userId\n    } }).then((response) => {\n              if (response.data.message) {\n                  return null;\n              } else {\n                  return response.data;\n              }\n          });\n  })\n\nexport const authSlice = createSlice({\n    name: 'user',\n    initialState: {\n        isLoggedIn: false,\n        user: {\n            id: -1,\n            firstName: '',\n            lastName: '',\n            username: '',\n            password: '',\n            email: '',\n            created: '',\n        },\n        userLikes: []\n    },\n    reducers: {\n        setIsLoggedIn: (state, action) => {\n            state.isLoggedIn = action.payload;\n        },\n        setFirstName: (state, action) => {\n            state.user.firstName = action.payload;\n        },\n        setLastName: (state, action) => {\n            state.user.lastName = action.payload;\n        },\n        setUsername: (state, action) => {\n            state.user.username = action.payload;\n        },\n        setEmail: (state, action) => {\n            state.user.email = action.payload;\n        },\n        setCreated: (state, action) => {\n            state.user.created = action.payload;\n        },\n        setUser: (state, action) => {\n            if (action.payload === null) {\n               state.isLoggedIn = false;\n            } else {\n                state.isLoggedIn = true;\n                state.user = action.payload;\n            }\n        },\n        addUserLike: (state, action) => {\n            state.userLikes.push(action.payload);\n        },\n        removeUserLike: (state, action) => {\n            var delIndex = -1;\n            const tempLikes = current(state).userLikes.map((like, indx) => {\n                if (like.likerId === action.payload.likerId && like.reviewId === action.payload.reviewId) {\n                    delIndex = indx;\n                }\n                return like;\n            });\n            if (delIndex > -1) {\n                tempLikes.splice(delIndex, 1);\n            }\n            state.userLikes = tempLikes;\n        }\n    },\n    extraReducers: {\n        [getLogin.fulfilled]: (state, action) => {\n            if (action.payload.success === true) {\n                state.user = action.payload.result;\n                state.isLoggedIn = true;\n            }\n        },\n        [getRegister.fulfilled]: (state, action) => {\n            if (action.payload.success === true) {\n                state.user = action.payload;\n                state.isLoggedIn = true;\n            }\n        },\n        [getUserLikes.fulfilled]: (state, action) => {\n            if (action.payload.success === true) {\n                state.userLikes = action.payload.result;\n            }\n        }\n    }\n});\n\nexport const { setIsLoggedIn, setUser, setFirstName, setLastName, setPassword, setUsername, setEmail, addUserLike, removeUserLike } = authSlice.actions;\n\n\n\n\nexport default authSlice.reducer;"]},"metadata":{},"sourceType":"module"}