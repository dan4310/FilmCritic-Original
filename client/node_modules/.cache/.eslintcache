[{"/Users/daniel/Desktop/Projects/FilmCritic/client/src/index.js":"1","/Users/daniel/Desktop/Projects/FilmCritic/client/src/reportWebVitals.js":"2","/Users/daniel/Desktop/Projects/FilmCritic/client/src/App.js":"3","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/MovieRow/MovieRow.js":"4","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Constants/Requests.js":"5","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/Navbar/Navbar.js":"6","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/HomePage.js":"7","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/LoginPage.js":"8","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/RegisterPage.js":"9","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Constants/secrets.js":"10","/Users/daniel/Desktop/Projects/FilmCritic/client/src/app/store.js":"11","/Users/daniel/Desktop/Projects/FilmCritic/client/src/features/authentication/authSlice.js":"12","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/MoviePage.js":"13","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/Container/Container.js":"14","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/Rating/Rating.js":"15","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/Badge/Badge.js":"16","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/ReviewForm/ReviewForm.js":"17"},{"size":620,"mtime":1625192871729,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1624648019340,"results":"20","hashOfConfig":"19"},{"size":1066,"mtime":1625262286940,"results":"21","hashOfConfig":"19"},{"size":4117,"mtime":1625285071087,"results":"22","hashOfConfig":"19"},{"size":1548,"mtime":1625271877362,"results":"23","hashOfConfig":"19"},{"size":3420,"mtime":1625288940355,"results":"24","hashOfConfig":"19"},{"size":1018,"mtime":1625272036475,"results":"25","hashOfConfig":"19"},{"size":3069,"mtime":1625288527772,"results":"26","hashOfConfig":"19"},{"size":6162,"mtime":1625261582709,"results":"27","hashOfConfig":"19"},{"size":102,"mtime":1625183520467,"results":"28","hashOfConfig":"19"},{"size":194,"mtime":1625194218600,"results":"29","hashOfConfig":"19"},{"size":1410,"mtime":1625260491929,"results":"30","hashOfConfig":"19"},{"size":8413,"mtime":1625288684531,"results":"31","hashOfConfig":"19"},{"size":1052,"mtime":1625288621127,"results":"32","hashOfConfig":"19"},{"size":1697,"mtime":1625289392173,"results":"33","hashOfConfig":"19"},{"size":449,"mtime":1625534158806,"results":"34","hashOfConfig":"19"},{"size":384,"mtime":1625288443365,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1o8c3zb",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/daniel/Desktop/Projects/FilmCritic/client/src/index.js",[],["78","79"],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/reportWebVitals.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/App.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/MovieRow/MovieRow.js",["80","81","82"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Rating from '../Rating/Rating';\n\nimport './MovieRow.css';\n\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\n\nconst MovieRow = ({category, fetchUrl, backdrop, style }) => {\n\n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {\n        fetch(fetchUrl).then(res => res.json())\n        .then(data => {\n          setMovies(data.results);\n        });\n      }, [fetchUrl])\n\n      const path = backdrop ? \"backdrop_path\" : \"poster_path\";\n\n    if (path === \"poster_path\") {\n        return (\n            <div className=\"category-row ms-4 mt-2 pe-2\">\n                <h2 className=\"category-text\">{category}</h2>\n                <div className=\"poster-row\">\n                    \n                {movies.length > 0 &&\n                    movies.map((movie, id) => {\n                        if (movie[path]){\n                            return (<Link to={{\n                                pathname: '/movie/'+movie.id+'/'+movie.title,\n                            }}>\n                            <div className=\"poster\">\n                                <Rating score={movie.vote_average} style={{\n                                    position: 'absolute',\n                                    right: 0,\n                                    bottom: 0,\n                                }}></Rating>\n                                <img key={id} className=\"poster-img m-2\" src={IMG_API + movie[path]} alt={movie.title} />\n                            </div>\n                            </Link>)\n                        }\n                        \n                    })\n                }</div>\n            </div> \n        )\n    }\n\n\n    return (\n        <div id=\"carouselExampleControls\" class=\"carousel slide\" data-bs-ride=\"carousel\" style={{ zIndex: \"0\"}}>\n            <div class=\"carousel-inner\">\n                {\n                    movies.map((movie, id) => {\n                        if (movie[path]){\n                            return (\n                                <div className={(id == 0) ? \"carousel-item active\" : \"carousel-item\"} alt={movie.title}>\n                                   <div className=\"poster-lg\">\n                                       <div class=\"movie-info-container\">\n                                            <div class=\"movie-title-container\">\n                                                <h1 className=\"movie-title\">{movie.title}</h1>\n                                            </div>\n                                            <div className=\"movie-desc-container pt-3\">\n                                                <p className=\"movie-desc\">{movie.overview}</p>\n                                            </div>\n                                        </div>\n                                        <div className=\"movie-blur\">\n                                            \n                                        </div>\n                                        <img key={id} className=\"poster-img-lg\" src={IMG_API + movie[path]} alt={movie.title} />\n                                    </div>\n                                </div>\n                            )\n                        }\n                        \n                    })\n                }\n            </div>\n            \n            <div className=\"d-flex flex-direction-row justify-space-between\">\n                <button class=\"carousel-control-prev \" type=\"button\" data-bs-target=\"#carouselExampleControls\" data-bs-slide=\"prev\">\n                    <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                    <span class=\"visually-hidden\">Previous</span>\n                </button>\n                <button class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleControls\" data-bs-slide=\"next\">\n                    <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                    <span class=\"visually-hidden\">Next</span>\n                </button>\n            </div>\n            \n\n        </div>\n    )\n    \n}\n\nexport default MovieRow;","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Constants/Requests.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/Navbar/Navbar.js",["83","84"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport \"./Navbar.css\";\n\nconst Navbar = () => {\n    const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\n    const user = useSelector((state) => state.auth.user);\n    const dispatch = useDispatch();\n\n    const [navbar, setNavbar] = useState(false);\n\n    const changeNavbar = () => {\n      if (window.scrollY >= 20) {\n        setNavbar(true);\n      } else {\n        setNavbar(false);\n      }\n    }\n\n    window.addEventListener('scroll', changeNavbar);\n\n    return (\n      <nav className=\"navbar navbar-light navbar-expand-md px-3\" style={{\n        background: navbar ? 'rgba(62, 62, 77, 1)' : 'none',\n        position: 'fixed',\n        width: '100%',\n        zIndex: 200,\n      }}>\n        <div className=\"container-fluid nav-container\">\n          <Link to=\"/\" className=\"navbar-brand d-flex flex-row align-items-center me-0\">\n          <i className=\"fa fa-film logo pe-1 \" aria-hidden=\"true\"></i>\n          <div className=\"logo text-white\">Critic</div>\n          </Link>\n\n          <button className=\"me-auto btn-small d-md-none draw meet ms-1\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span>Browse</span>\n            <i className=\"fa fa-caret-down ps-1\" aria-hidden=\"true\"></i>\n          </button>\n\n          \n          <div className=\"me-auto ms-2 d-none d-md-flex\">\n            <button className=\"btn-small draw meet\">\n              Movies\n            </button>\n          \n            <button className=\"btn-small draw meet\">\n              TV Shows\n            </button> \n          </div>\n                 \n          \n          \n          \n          \n            <button className=\"btn-small draw meet mx-1 mx-md-0\">\n              <i className=\"fa fa-ticket nav-icon\" aria-hidden=\"true\"></i>\n            </button> \n          { !isLoggedIn ?\n            <>\n              <Link to=\"/register\" style={{\n                textDecoration: 'none'\n              }}>\n                <button className=\"btn-small draw meet mx-2 xs-hidden\">\n                  Sign Up\n                </button>\n              </Link>\n              <Link to=\"/login\" style={{\n                textDecoration: 'none'\n              }}>\n                  <button className=\"btn-login draw meet\">\n                      Login\n                  </button>\n              </Link></>\n            :\n            <>\n            \n            <Link to=\"/profile\" className=\"navbar-brand me-0 ms-0\">\n              <button className=\"btn-large draw meet\">\n                <div className=\"username\">{user.firstName || user.username}</div>\n              </button>\n            </Link></>\n          }\n          \n\n        </div>\n        <div className=\"collapse navbar-collapse p-1 p-md-0 mt-2\" id=\"navbarText\">\n          <ul className=\"navbar-nav me-auto mb-0 d-inline d-md-none\">\n            <li className=\"nav-item\">\n              <button className=\"btn-small draw meet\">\n                Movies\n              </button>\n            </li>\n            <li className=\"nav-item\">\n            <button className=\"btn-small me-auto draw meet\">\n                TV Shows\n              </button>\n            </li>\n          </ul>\n        </div>\n       \n\n      </nav>\n    )\n}\n\nexport default Navbar;","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/HomePage.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/LoginPage.js",["85","86"],"import React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Axios from 'axios';\nimport Container from '../Components/Container/Container';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { \n    setUser\n } from './../features/authentication/authSlice';\n\nconst LoginPage = () => {\n    const history = useHistory();\n    const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\n    const dispatch = useDispatch();\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const login = () => {\n        Axios.post(\"http://localhost:3001/login\", {\n            username: username,\n            password: password,\n        }).then((response) => {\n            if (response.data.message) {\n                console.log(response.data.message);\n            } else {\n                dispatch(setUser(response.data));\n                history.push(\"/\");\n            }\n        });\n    };\n\n    return (\n        <div className=\"container-fluid px-0\" style={{\n            background: 'rgba(29, 29, 35, 1)',\n            paddingBottom: '5rem',\n            paddingTop: '5rem',\n        }}>\n            <div className=\"container-fluid px-4\">\n                <h1 className=\"py-2 form-title\" style={{\n                    fontSize: '48px',\n                    textShadow: '4px 4px rgba(80, 80, 100, 1)',\n                }}>Login</h1>\n                \n\n                <form>\n                <Container topBorder variant=\"shadow\">\n                <div className=\"mb-3\">\n                    <label htmlFor=\"exampleInputUsername1\" className=\"form-label\">Username *</label>\n                    <input type=\"username\" className=\"form-control\" id=\"exampleInputUsername1\" aria-describedby=\"usernameHelp\"\n                        onChange={(e) => {\n                            setUsername(e.target.value);\n                        }}\n                    />\n                </div>\n\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"exampleInputPassword1\" className=\"form-label d-flex\">Password *</label>\n                        <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\"\n                            onChange={(e) => {\n                                setPassword(e.target.value);\n                            }}\n                        />\n                    </div>\n                \n                <button type=\"button\" className=\"btn-login draw meet\"\n                    onClick={login}\n                >Login</button>\n                </Container>\n                </form>\n\n                <label className=\"form-label mt-4\">Don't have an account? Become a critic <Link to=\"/register\"\n                    style={{\n                        textDecoration: 'none',\n                        color: \"rgba(225, 202, 240, 1)\",\n                        borderBottom: '2px solid rgba(80, 80, 100, 1)'\n                    }}\n                >here.</Link></label>\n\n            </div> \n        </div>\n    )\n}\n\nexport default LoginPage;","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/RegisterPage.js",["87"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Axios from 'axios';\nimport './RegisterPage.css'\nimport { \n    setUser\n } from './../features/authentication/authSlice'\nimport { useHistory } from 'react-router-dom';\n\nconst RegisterPage = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [email, setEmail] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n\n    const register = () => {\n        if (password === confirmPassword && password.length > 0) {\n            if (username.length > 0) {\n                Axios.post('http://localhost:3001/register', {\n                    username: username,\n                    password: password,\n                    firstName: firstName,\n                    lastName: lastName,\n                    email: email,\n                    created: new Date().toISOString().slice(0, 19).replace('T', ' ')\n                }).then((response, err) => {\n                    if (response.data.success === false) {\n                        console.log(response.data.message);\n                    } else {\n                        console.log(response.data.user);\n                        dispatch(setUser(response.data.user));\n                        history.push(\"/\");\n                    }\n                });\n            } else {\n                console.log(\"Must enter a username!\");\n            }\n            \n        } else {\n            console.log(\"Passwords do not match!\");\n        }\n        \n    };\n\n    return (\n        <div className=\"container-fluid px-0\" style={{\n            background: 'rgba(29, 29, 35, 1)',\n            paddingBottom: '5rem',\n            paddingTop: '5rem',\n        }}>\n            <div className=\"container-fluid px-4\">\n                <h1 className=\"py-2 form-title\" style={{\n                    fontSize: '48px',\n                    textShadow: '4px 4px rgba(80, 80, 100, 1)',\n                }}>Create an account</h1>\n                <form className=\"container-fluid py-3\" style={{\n                    backgroundColor: 'rgba(80, 80, 100, 1)',\n                    borderTop: '4px solid rgba(225, 202, 240, 1)',\n                    boxShadow: '10px 10px 20px black',\n                    borderRadius: '3px',\n                }}>\n                <div className=\"row\">\n                    <div className=\"mb-3 col-12 col-md-6\">\n                        <label htmlFor=\"exampleInputFirstName1\" className=\"form-label\">First name</label>\n                        <input type=\"firstName\" className=\"form-control\" id=\"exampleInputFirstName1\" aria-describedby=\"firstNameHelp\"\n                            onChange={(e) => {\n                                setFirstName(e.target.value);\n                            }}\n                        />\n                    </div>\n                    <div className=\"mb-3 col-12 col-md-6\">\n                        <label htmlFor=\"exampleInputLastName1\" className=\"form-label\">Last name</label>\n                        <input type=\"lastName\" className=\"form-control\" id=\"exampleInputLastName1\" aria-describedby=\"firstNameHelp\"\n                            onChange={(e) => {\n                                setLastName(e.target.value);\n                            }}\n                        />\n                    </div>\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"exampleInputUsername1\" className=\"form-label d-flex\">Username *</label>\n                    <input type=\"username\" className=\"form-control\" id=\"exampleInputUsername1\" aria-describedby=\"usernameHelp\"\n                        onChange={(e) => {\n                            setUsername(e.target.value);\n                        }}\n                    />\n                </div>\n                \n                <div className=\"mb-2\">\n                    <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n                    <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\n                        onChange={(e) => {\n                            setEmail(e.target.value);\n                        }}\n                    />\n                    <div id=\"emailHelp\" className=\"form-text\" style={{\n                        color: 'rgba(29, 29, 35, 1)'\n                    }}>We'll never share your email with anyone else.</div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"mb-3 col-12 col-md-6\">\n                        <label htmlFor=\"exampleInputPassword1\" className=\"form-label d-flex\">Password *</label>\n                        <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\"\n                            onChange={(e) => {\n                                setPassword(e.target.value);\n                            }}\n                        />\n                    </div>\n                    <div className=\"mb-3 col-12 col-md-6\">\n                        <label htmlFor=\"exampleInputConfirmPassword1\" className=\"form-label\">Confirm Password *</label>\n                        <input type=\"password\" className=\"form-control\" id=\"exampleInputConfirmPassword1\"\n                            onChange={(e) => {\n                                setConfirmPassword(e.target.value);\n                            }}\n                        />\n                        <div id=\"confirmPasswordHelp\" className=\"form-text\" style={{\n                            color: 'rgba(29, 29, 35, 1)'\n                        }}>Re-enter your password to confirm it was entered correctly.</div>\n                    </div>\n                </div>\n                \n                <button type=\"button\" className=\"btn-login draw meet\"\n                    onClick={register}\n                >Register</button>\n                </form>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default RegisterPage;","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Constants/secrets.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/app/store.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/features/authentication/authSlice.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/MoviePage.js",["88","89"],"import React, { useEffect, useState } from 'react';\nimport requests from '../Constants/Requests';\nimport Container from '../Components/Container/Container';\nimport Rating from '../Components/Rating/Rating';\nimport Badge from '../Components/Badge/Badge';\nimport ReviewForm from '../Components/ReviewForm/ReviewForm';\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\n\nconst MoviePage = (props) => {\n    const [movie, setMovie] = useState({});\n    var tempUrl = props.location.pathname;\n    tempUrl = tempUrl.slice(7,tempUrl.length);\n\n    const movieId = tempUrl.slice(0, tempUrl.indexOf('/'));\n\n    useEffect(() => {\n        const movieUrl = requests.moviepageRequests.fetchMovie(movieId).url;\n        fetch(movieUrl).then(res => res.json())\n        .then(data => {\n            if (data.status_message) {\n                return;\n            }\n            setMovie(data);\n        });\n      }, [])\n\n      var formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n      \n      });\n\n    const movieNotFound = () => {\n        return (\n            <h1 className=\"text-white text-center\" style={{\n                paddingTop: '10rem'\n            }}>Movie not found!</h1>\n        )\n    }\n\n    const movieInfo = () => {\n        console.log(movie);\n        return (\n            <div className=\"container-fluid px-0\" style={{\n            background: 'rgba(29, 29, 35, 1)',\n            paddingBottom: '5rem',\n            paddingTop: '5rem',\n        }}>\n            <div className=\"container-fluid px-4\">\n                <div className=\"row\">\n                    <div className=\"img-container col-3 d-flex flex-column\">\n                        <div className=\"mb-4\">\n                            <img key={movie.id} src={IMG_API + movie.poster_path} alt={movie.title} \n                                style={{\n                                    width: '100%',\n                                    boxShadow: '10px 10px 20px black'\n                                }}\n                            />\n                        </div>\n                        <h1 style={{\n                                color: 'rgba(80, 80, 100, 1)',\n                                fontSize: '25px',\n                                fontWeight: '500',\n                                textShadow: '2px 2px black',\n                            }}>Production Companies</h1>\n                        <Container>\n                            {\n                                movie.production_companies.map((company, id) => {\n                                    return (\n                                        <span className=\"\" style={{\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            color: 'rgba(29, 29, 35, 1)',\n                                            fontSize: '16px',\n                                            fontWeight: '500',\n                                        }}>{company.name}</span>\n                                    )\n                                })\n                            }\n                        </Container>\n                    \n                    </div>\n\n                    <div className=\"col\">\n                        <div className=\"pb-3 row\">\n                            <div className=\"col-12 d-flex flex-column\">\n                                <h1 style={{\n                                    fontSize: '60px',\n                                    textShadow: '4px 4px rgba(80, 80, 100, 1)',\n                                }}>{movie.title}</h1>\n                                {\n                                    movie.tagline && <h1 style={{\n                                        color: 'rgba(80, 80, 100, 1)',\n                                        fontSize: '25px',\n                                        fontWeight: '500',\n                                        textShadow: '2px 2px black',\n                                    }}>{movie.tagline}</h1>\n                                }\n                            </div>\n\n                            <div className=\"col-12 d-flex flex-row py-2\">\n                                {\n                                    movie.genres.map((genre, id) => {\n                                        return (\n                                            <Badge className=\"me-3\" key={id}>{genre.name}</Badge>\n                                        )\n                                    })\n                                }\n                            </div>\n                            \n                            <div className=\"col my-3\">\n                                <Container className=\"d-flex align-items-center justify-content-between\">\n                                    <Rating className=\"\" size=\"large\" score={movie.vote_average}\n                                        style={{\n                                            backgroundColor: 'rgba(225, 202, 240, 1)',\n                                            boxShadow: '4px 4px rgba(29, 29, 35, 1)',\n                                            border: '2px solid white',\n                                        }}\n                                    />\n                                    <span className=\"\" style={{\n                                            color: 'rgba(29, 29, 35, 1)',\n                                            fontSize: '16px',\n                                            fontWeight: '500',\n                                            width: 'auto'\n                                        }}>{movie.runtime+\" mins\"}</span>\n\n                                    <div className=\"d-flex flex-column\">\n                                        <span style={{\n                                            color: 'rgba(29, 29, 35, 1)',\n                                            fontSize: '16px',\n                                            fontWeight: '500',\n                                        }}>{'Budget: '+formatter.format(movie.budget)}</span>\n                                        <span style={{\n                                            color: 'rgba(29, 29, 35, 1)',\n                                            fontSize: '16px',\n                                            fontWeight: '500',\n                                        }}>{'Revenue: '+formatter.format(movie.revenue)}</span>\n                                    </div>\n                                    <div>\n\n                                    </div>\n                                    \n                                </Container>\n                            </div>\n                            \n                        </div>\n                        { movie.overview &&\n                             <Container>\n                                <span className=\"py-1\" style={{\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    color: 'white',\n                                    color: 'white',\n                                    fontSize: '25px',\n                                    fontWeight: '500',\n                                    textShadow: '2px 2px rgba(29, 29, 35, 1)',\n                                }}>\n                                    Overview\n                                </span>\n                                <span className=\"py-1\" style={{\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    color: 'rgba(29, 29, 35, 1)',\n                                    fontSize: '16px',\n                                    fontWeight: '500',\n                                }}>{movie.overview}</span>\n                            </Container>\n                        }\n\n                        <ReviewForm className=\"mt-4\"></ReviewForm>\n                                               \n                    </div>\n                    \n                </div>\n            </div> \n        </div>\n        )\n    }\n    \n    return (\n        <div className=\"container-fluid\" style={{\n            backgroundColor: \"rgba(29, 29, 35, 1)\",\n        }}>\n            {movie.hasOwnProperty('title') ?\n                movieInfo()\n            :\n                movieNotFound()\n            }\n        </div>\n    )\n}\n\nexport default MoviePage;","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/Container/Container.js",["90"],"import React from 'react';\n\nconst Container = ({ children, style, topBorder, variant, backgroundColor, className }) => {\n\n    const shadowStyle = (variant) => {\n        switch (variant) {\n            case 'shadow':\n                return '10px 10px 20px black';\n            case 'primary':\n                return '10px 10px black';\n            default:\n                return '';\n        }\n    }\n\n    const backgroundStyle = (backgroundColor) => {\n        switch (backgroundColor) {\n            case 'primary':\n                return 'rgba(225, 202, 240, 1)';\n            default:\n                return 'rgba(80, 80, 100, 1)';\n        }\n    }\n\n    return (\n        <div className={\"container-fluid py-2\" + \" \" + className} style={{\n            backgroundColor: backgroundStyle(backgroundColor),\n            borderTop: topBorder && '4px solid rgba(225, 202, 240, 1)',\n            boxShadow: shadowStyle(variant),\n            borderRadius: '3px',\n            ...style,\n        }}>\n            {children}\n        </div>\n    )\n}\n\nexport default Container;","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/Rating/Rating.js",["91","92"],"import React from 'react';\n\nconst Rating = ({ style, children, score, variant, size, className }) => {\n\n    const baseStyles = {\n        borderRadius: '50%',\n        background: 'rgba(80, 80, 100, 1)',\n        boxShadow: '-2px -2px rgba(225, 202, 240, 1)',\n        background: 'rgba(80, 80, 100, 1)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n    \n    const containerStyleSmall = {\n        width: '36px',\n        height: '36px',\n        padding: '8px',\n        fontSize: '14px',\n        fontWeight: '500',\n        textShadow: '1px 1px rgba(29, 29, 35, 1)'\n    }\n    const containerStyleLarge = {\n        width: '66px',\n        height: '66px',\n        fontWeight: '800',\n        padding: '12px',\n        fontSize: '24px',\n        textShadow: '2px 2px rgba(29, 29, 35, 1)'\n    }\n\n    const sizeStyles = (size) => {\n        switch (size) {\n            case 'small':\n                return containerStyleSmall;\n            case 'large':\n                return containerStyleLarge;\n            default:\n                return containerStyleSmall;\n        }\n    }\n   \n\n    const ratingColor = (score) => {\n        if (score <= 0) {\n            return \"white\";\n        } else if (score < 6) {\n            return \"red\";\n        } else if (score < 8) {\n            return \"orange\";\n        } else {\n            return \"lightgreen\";\n        }\n    }\n\n    return (\n        <div className={\"rating-container\" + \" \" + className} style={{\n            color: ratingColor(score),\n            ...baseStyles,\n            ...sizeStyles(size),\n            ...style,\n        }}>\n            {score === 0 ? \"N/A\" : score}\n        </div>\n    )\n}\n\nexport default Rating;","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/Badge/Badge.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/ReviewForm/ReviewForm.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":30,"column":44,"nodeType":"99","messageId":"100","endLine":30,"endColumn":46},{"ruleId":"97","severity":1,"message":"98","line":57,"column":44,"nodeType":"99","messageId":"100","endLine":57,"endColumn":46},{"ruleId":"101","severity":1,"message":"102","line":60,"column":53,"nodeType":"103","messageId":"104","endLine":60,"endColumn":55},{"ruleId":"105","severity":1,"message":"106","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"105","severity":1,"message":"109","line":9,"column":11,"nodeType":"107","messageId":"108","endLine":9,"endColumn":19},{"ruleId":"105","severity":1,"message":"106","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"105","severity":1,"message":"110","line":12,"column":11,"nodeType":"107","messageId":"108","endLine":12,"endColumn":21},{"ruleId":"105","severity":1,"message":"106","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"112","line":25,"column":10,"nodeType":"113","endLine":25,"endColumn":12,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":153,"column":37,"nodeType":"117","messageId":"104","endLine":153,"endColumn":42},{"ruleId":"118","severity":1,"message":"119","line":26,"column":48,"nodeType":"103","messageId":"120","endLine":26,"endColumn":49},{"ruleId":"115","severity":1,"message":"121","line":9,"column":9,"nodeType":"117","messageId":"104","endLine":9,"endColumn":19},{"ruleId":"118","severity":1,"message":"119","line":57,"column":44,"nodeType":"103","messageId":"120","endLine":57,"endColumn":45},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'movieId'. Either include it or remove the dependency array.","ArrayExpression",["124"],"no-dupe-keys","Duplicate key 'color'.","ObjectExpression","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","Duplicate key 'background'.","no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},"Update the dependencies array to be: [movieId]",{"range":"127","text":"128"},[893,895],"[movieId]"]