[{"/Users/daniel/Desktop/Projects/FilmCritic/client/src/index.js":"1","/Users/daniel/Desktop/Projects/FilmCritic/client/src/reportWebVitals.js":"2","/Users/daniel/Desktop/Projects/FilmCritic/client/src/App.js":"3","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/MovieRow/MovieRow.js":"4","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Constants/Requests.js":"5","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/Navbar/Navbar.js":"6","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/HomePage.js":"7","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/LoginPage.js":"8","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/RegisterPage.js":"9","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Constants/secrets.js":"10","/Users/daniel/Desktop/Projects/FilmCritic/client/src/app/store.js":"11","/Users/daniel/Desktop/Projects/FilmCritic/client/src/features/authentication/authSlice.js":"12","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/MoviePage.js":"13","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/Container/Container.js":"14","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/Rating/Rating.js":"15"},{"size":620,"mtime":1625192871729,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1624648019340,"results":"18","hashOfConfig":"17"},{"size":1066,"mtime":1625262286940,"results":"19","hashOfConfig":"17"},{"size":4766,"mtime":1625266219914,"results":"20","hashOfConfig":"17"},{"size":1462,"mtime":1625253278196,"results":"21","hashOfConfig":"17"},{"size":3417,"mtime":1625261891522,"results":"22","hashOfConfig":"17"},{"size":950,"mtime":1625180162729,"results":"23","hashOfConfig":"17"},{"size":3339,"mtime":1625264298602,"results":"24","hashOfConfig":"17"},{"size":6162,"mtime":1625261582709,"results":"25","hashOfConfig":"17"},{"size":102,"mtime":1625183520467,"results":"26","hashOfConfig":"17"},{"size":194,"mtime":1625194218600,"results":"27","hashOfConfig":"17"},{"size":1410,"mtime":1625260491929,"results":"28","hashOfConfig":"17"},{"size":3877,"mtime":1625266842792,"results":"29","hashOfConfig":"17"},{"size":996,"mtime":1625265452615,"results":"30","hashOfConfig":"17"},{"size":1613,"mtime":1625267303198,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1o8c3zb",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/daniel/Desktop/Projects/FilmCritic/client/src/index.js",[],["66","67"],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/reportWebVitals.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/App.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/MovieRow/MovieRow.js",["68","69","70"],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Constants/Requests.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/Navbar/Navbar.js",["71","72"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport \"./Navbar.css\";\n\nconst Navbar = () => {\n    const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\n    const user = useSelector((state) => state.auth.user);\n    const dispatch = useDispatch();\n\n    const [navbar, setNavbar] = useState(false);\n\n    const changeNavbar = () => {\n      if (window.scrollY >= 20) {\n        setNavbar(true);\n      } else {\n        setNavbar(false);\n      }\n    }\n\n    window.addEventListener('scroll', changeNavbar);\n\n    return (\n      <nav className=\"navbar navbar-light navbar-expand-md px-3\" style={{\n        background: navbar ? 'rgba(62, 62, 77, 1)' : 'none',\n        position: 'fixed',\n        width: '100%',\n        zIndex: 200,\n      }}>\n        <div className=\"container-fluid nav-container\">\n          <Link to=\"/\" className=\"navbar-brand d-flex flex-row align-items-center me-0\">\n          <i className=\"fa fa-film logo pe-1 \" aria-hidden=\"true\"></i>\n          <div className=\"logo text-white\">Critic</div>\n          </Link>\n\n          <button className=\"me-auto btn-small d-md-none draw meet ms-1\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span>Browse</span>\n            <i className=\"fa fa-caret-down ps-1\" aria-hidden=\"true\"></i>\n          </button>\n\n          \n          <div className=\"me-auto ms-2 d-none d-md-flex\">\n            <button className=\"btn-small draw meet\">\n              Movies\n            </button>\n          \n            <button className=\"btn-small draw meet\">\n              TV Shows\n            </button> \n          </div>\n                 \n          \n          \n          \n          \n         \n          { !isLoggedIn ?\n            <>\n              <Link to=\"/register\" style={{\n                textDecoration: 'none'\n              }}>\n                <button className=\"btn-small draw meet mx-2 xs-hidden\">\n                  Sign Up\n                </button>\n              </Link>\n              <Link to=\"/login\" style={{\n                textDecoration: 'none'\n              }}>\n                  <button className=\"btn-login draw meet\">\n                      Login\n                  </button>\n              </Link></>\n            :\n            <>\n            <button className=\"btn-small draw meet mx-1 mx-md-0\">\n              <i className=\"fa fa-ticket nav-icon\" aria-hidden=\"true\"></i>\n            </button> \n            <Link to=\"/profile\" className=\"navbar-brand me-0 ms-0\">\n              <button className=\"btn-large draw meet\">\n                <div className=\"username\">{user.firstName || user.username}</div>\n              </button>\n            </Link></>\n          }\n          \n\n        </div>\n        <div className=\"collapse navbar-collapse p-1 p-md-0 mt-2\" id=\"navbarText\">\n          <ul className=\"navbar-nav me-auto mb-0 d-inline d-md-none\">\n            <li className=\"nav-item\">\n              <button className=\"btn-small draw meet\">\n                Movies\n              </button>\n            </li>\n            <li className=\"nav-item\">\n            <button className=\"btn-small me-auto draw meet\">\n                TV Shows\n              </button>\n            </li>\n          </ul>\n        </div>\n       \n\n      </nav>\n    )\n}\n\nexport default Navbar;","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/HomePage.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/LoginPage.js",["73","74","75","76","77","78","79","80"],"import React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { \n    setIsLoggedIn,\n    setFirstName,\n    setLastName,\n    setUsername as setGlobalUsername,\n    setPassword,\n    setEmail,\n    setUser\n } from './../features/authentication/authSlice';\n\nconst LoginPage = () => {\n    const history = useHistory();\n    const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\n    const dispatch = useDispatch();\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const login = () => {\n        Axios.post(\"http://localhost:3001/login\", {\n            username: username,\n            password: password,\n        }).then((response) => {\n            if (response.data.message) {\n                console.log(response.data.message);\n            } else {\n                dispatch(setUser(response.data));\n                history.push(\"/\");\n            }\n        });\n    };\n\n    return (\n        <div className=\"container-fluid px-0\" style={{\n            background: 'rgba(29, 29, 35, 1)',\n            paddingBottom: '5rem',\n            paddingTop: '5rem',\n        }}>\n            <div className=\"container-fluid px-4\">\n                <h1 className=\"py-2 form-title\" style={{\n                    fontSize: '48px',\n                    textShadow: '4px 4px rgba(80, 80, 100, 1)',\n                }}>Login</h1>\n                \n\n                <form className=\"container-fluid py-3\" style={{\n                    backgroundColor: 'rgba(80, 80, 100, 1)',\n                    borderTop: '4px solid rgba(225, 202, 240, 1)',\n                    boxShadow: '10px 10px 20px black',\n                    borderRadius: '3px',\n                }}>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"exampleInputUsername1\" className=\"form-label\">Username *</label>\n                    <input type=\"username\" className=\"form-control\" id=\"exampleInputUsername1\" aria-describedby=\"usernameHelp\"\n                        onChange={(e) => {\n                            setUsername(e.target.value);\n                        }}\n                    />\n                </div>\n\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"exampleInputPassword1\" className=\"form-label d-flex\">Password *</label>\n                        <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\"\n                            onChange={(e) => {\n                                setPassword(e.target.value);\n                            }}\n                        />\n                    </div>\n                \n                <button type=\"button\" className=\"btn-login draw meet\"\n                    onClick={login}\n                >Login</button>\n                </form>\n\n                <label className=\"form-label ms-2 mt-2\">Don't have an account? Become a critic <Link to=\"/register\"\n                    style={{\n                        textDecoration: 'none',\n                        color: \"rgba(225, 202, 240, 1)\",\n                        borderBottom: '2px solid rgba(80, 80, 100, 1)'\n                    }}\n                >here.</Link></label>\n\n            </div> \n        </div>\n    )\n}\n\nexport default LoginPage;","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/RegisterPage.js",["81"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Axios from 'axios';\nimport './RegisterPage.css'\nimport { \n    setUser\n } from './../features/authentication/authSlice'\nimport { useHistory } from 'react-router-dom';\n\nconst RegisterPage = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [email, setEmail] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n\n    const register = () => {\n        if (password === confirmPassword && password.length > 0) {\n            if (username.length > 0) {\n                Axios.post('http://localhost:3001/register', {\n                    username: username,\n                    password: password,\n                    firstName: firstName,\n                    lastName: lastName,\n                    email: email,\n                    created: new Date().toISOString().slice(0, 19).replace('T', ' ')\n                }).then((response, err) => {\n                    if (response.data.success === false) {\n                        console.log(response.data.message);\n                    } else {\n                        console.log(response.data.user);\n                        dispatch(setUser(response.data.user));\n                        history.push(\"/\");\n                    }\n                });\n            } else {\n                console.log(\"Must enter a username!\");\n            }\n            \n        } else {\n            console.log(\"Passwords do not match!\");\n        }\n        \n    };\n\n    return (\n        <div className=\"container-fluid px-0\" style={{\n            background: 'rgba(29, 29, 35, 1)',\n            paddingBottom: '5rem',\n            paddingTop: '5rem',\n        }}>\n            <div className=\"container-fluid px-4\">\n                <h1 className=\"py-2 form-title\" style={{\n                    fontSize: '48px',\n                    textShadow: '4px 4px rgba(80, 80, 100, 1)',\n                }}>Create an account</h1>\n                <form className=\"container-fluid py-3\" style={{\n                    backgroundColor: 'rgba(80, 80, 100, 1)',\n                    borderTop: '4px solid rgba(225, 202, 240, 1)',\n                    boxShadow: '10px 10px 20px black',\n                    borderRadius: '3px',\n                }}>\n                <div className=\"row\">\n                    <div className=\"mb-3 col-12 col-md-6\">\n                        <label htmlFor=\"exampleInputFirstName1\" className=\"form-label\">First name</label>\n                        <input type=\"firstName\" className=\"form-control\" id=\"exampleInputFirstName1\" aria-describedby=\"firstNameHelp\"\n                            onChange={(e) => {\n                                setFirstName(e.target.value);\n                            }}\n                        />\n                    </div>\n                    <div className=\"mb-3 col-12 col-md-6\">\n                        <label htmlFor=\"exampleInputLastName1\" className=\"form-label\">Last name</label>\n                        <input type=\"lastName\" className=\"form-control\" id=\"exampleInputLastName1\" aria-describedby=\"firstNameHelp\"\n                            onChange={(e) => {\n                                setLastName(e.target.value);\n                            }}\n                        />\n                    </div>\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"exampleInputUsername1\" className=\"form-label d-flex\">Username *</label>\n                    <input type=\"username\" className=\"form-control\" id=\"exampleInputUsername1\" aria-describedby=\"usernameHelp\"\n                        onChange={(e) => {\n                            setUsername(e.target.value);\n                        }}\n                    />\n                </div>\n                \n                <div className=\"mb-2\">\n                    <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n                    <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\n                        onChange={(e) => {\n                            setEmail(e.target.value);\n                        }}\n                    />\n                    <div id=\"emailHelp\" className=\"form-text\" style={{\n                        color: 'rgba(29, 29, 35, 1)'\n                    }}>We'll never share your email with anyone else.</div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"mb-3 col-12 col-md-6\">\n                        <label htmlFor=\"exampleInputPassword1\" className=\"form-label d-flex\">Password *</label>\n                        <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\"\n                            onChange={(e) => {\n                                setPassword(e.target.value);\n                            }}\n                        />\n                    </div>\n                    <div className=\"mb-3 col-12 col-md-6\">\n                        <label htmlFor=\"exampleInputConfirmPassword1\" className=\"form-label\">Confirm Password *</label>\n                        <input type=\"password\" className=\"form-control\" id=\"exampleInputConfirmPassword1\"\n                            onChange={(e) => {\n                                setConfirmPassword(e.target.value);\n                            }}\n                        />\n                        <div id=\"confirmPasswordHelp\" className=\"form-text\" style={{\n                            color: 'rgba(29, 29, 35, 1)'\n                        }}>Re-enter your password to confirm it was entered correctly.</div>\n                    </div>\n                </div>\n                \n                <button type=\"button\" className=\"btn-login draw meet\"\n                    onClick={register}\n                >Register</button>\n                </form>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default RegisterPage;","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Constants/secrets.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/app/store.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/features/authentication/authSlice.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/MoviePage.js",["82","83"],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/Container/Container.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/Rating/Rating.js",["84"],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":30,"column":44,"nodeType":"91","messageId":"92","endLine":30,"endColumn":46},{"ruleId":"89","severity":1,"message":"90","line":57,"column":44,"nodeType":"91","messageId":"92","endLine":57,"endColumn":46},{"ruleId":"93","severity":1,"message":"94","line":60,"column":53,"nodeType":"95","messageId":"96","endLine":60,"endColumn":55},{"ruleId":"97","severity":1,"message":"98","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"101","line":9,"column":11,"nodeType":"99","messageId":"100","endLine":9,"endColumn":19},{"ruleId":"97","severity":1,"message":"98","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"102","line":6,"column":5,"nodeType":"99","messageId":"100","endLine":6,"endColumn":18},{"ruleId":"97","severity":1,"message":"103","line":7,"column":5,"nodeType":"99","messageId":"100","endLine":7,"endColumn":17},{"ruleId":"97","severity":1,"message":"104","line":8,"column":5,"nodeType":"99","messageId":"100","endLine":8,"endColumn":16},{"ruleId":"97","severity":1,"message":"105","line":9,"column":20,"nodeType":"99","messageId":"100","endLine":9,"endColumn":37},{"ruleId":"97","severity":1,"message":"106","line":10,"column":5,"nodeType":"99","messageId":"100","endLine":10,"endColumn":16},{"ruleId":"97","severity":1,"message":"107","line":11,"column":5,"nodeType":"99","messageId":"100","endLine":11,"endColumn":13},{"ruleId":"97","severity":1,"message":"108","line":17,"column":11,"nodeType":"99","messageId":"100","endLine":17,"endColumn":21},{"ruleId":"97","severity":1,"message":"98","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"109","severity":1,"message":"110","line":23,"column":10,"nodeType":"111","endLine":23,"endColumn":12,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":72,"column":33,"nodeType":"115","messageId":"96","endLine":72,"endColumn":38},{"ruleId":"113","severity":1,"message":"116","line":9,"column":9,"nodeType":"115","messageId":"96","endLine":9,"endColumn":19},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'setIsLoggedIn' is defined but never used.","'setFirstName' is defined but never used.","'setLastName' is defined but never used.","'setGlobalUsername' is defined but never used.","'setPassword' is defined but never used.","'setEmail' is defined but never used.","'isLoggedIn' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'movieId'. Either include it or remove the dependency array.","ArrayExpression",["119"],"no-dupe-keys","Duplicate key 'color'.","ObjectExpression","Duplicate key 'background'.","no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},"Update the dependencies array to be: [movieId]",{"range":"122","text":"123"},[766,768],"[movieId]"]