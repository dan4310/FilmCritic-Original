[{"/Users/daniel/Desktop/Projects/FilmCritic/client/src/index.js":"1","/Users/daniel/Desktop/Projects/FilmCritic/client/src/reportWebVitals.js":"2","/Users/daniel/Desktop/Projects/FilmCritic/client/src/App.js":"3","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/MovieRow/MovieRow.js":"4","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Constants/Requests.js":"5","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/Navbar/Navbar.js":"6","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/HomePage.js":"7","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/LoginPage.js":"8","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/RegisterPage.js":"9","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Constants/secrets.js":"10","/Users/daniel/Desktop/Projects/FilmCritic/client/src/app/store.js":"11","/Users/daniel/Desktop/Projects/FilmCritic/client/src/features/authentication/authSlice.js":"12","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/MoviePage.js":"13","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/Container/Container.js":"14","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/Rating/Rating.js":"15","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/Badge/Badge.js":"16","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/ReviewForm/ReviewForm.js":"17","/Users/daniel/Desktop/Projects/FilmCritic/client/src/api/user.js":"18","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/IconRating/IconRating.js":"19","/Users/daniel/Desktop/Projects/FilmCritic/client/src/features/movie/movieSlice.js":"20","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/Reviews/Reviews.js":"21","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Graphql/Mutations.js":"22","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Graphql/Queries.js":"23"},{"size":870,"mtime":1626375973735,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1624648019340,"results":"26","hashOfConfig":"25"},{"size":1066,"mtime":1625262286940,"results":"27","hashOfConfig":"25"},{"size":4282,"mtime":1626386974594,"results":"28","hashOfConfig":"25"},{"size":1548,"mtime":1625271877362,"results":"29","hashOfConfig":"25"},{"size":3361,"mtime":1626387010290,"results":"30","hashOfConfig":"25"},{"size":1022,"mtime":1626386584259,"results":"31","hashOfConfig":"25"},{"size":4136,"mtime":1626398589820,"results":"32","hashOfConfig":"25"},{"size":7072,"mtime":1626399358585,"results":"33","hashOfConfig":"25"},{"size":102,"mtime":1625183520467,"results":"34","hashOfConfig":"25"},{"size":283,"mtime":1625876258403,"results":"35","hashOfConfig":"25"},{"size":1928,"mtime":1626406704221,"results":"36","hashOfConfig":"25"},{"size":9716,"mtime":1626401881237,"results":"37","hashOfConfig":"25"},{"size":1056,"mtime":1626398158821,"results":"38","hashOfConfig":"25"},{"size":1648,"mtime":1626387026756,"results":"39","hashOfConfig":"25"},{"size":444,"mtime":1626398110343,"results":"40","hashOfConfig":"25"},{"size":3977,"mtime":1626398467773,"results":"41","hashOfConfig":"25"},{"size":495,"mtime":1625861276704,"results":"42","hashOfConfig":"25"},{"size":2423,"mtime":1626386651675,"results":"43","hashOfConfig":"25"},{"size":1719,"mtime":1626735403672,"results":"44","hashOfConfig":"25"},{"size":9142,"mtime":1626733050756,"results":"45","hashOfConfig":"25"},{"size":2188,"mtime":1626731599961,"results":"46","hashOfConfig":"25"},{"size":1204,"mtime":1626403506771,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1o8c3zb",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/daniel/Desktop/Projects/FilmCritic/client/src/index.js",[],["98","99"],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/reportWebVitals.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/App.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/MovieRow/MovieRow.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Constants/Requests.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/Navbar/Navbar.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/HomePage.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/LoginPage.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/RegisterPage.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Constants/secrets.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/app/store.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/features/authentication/authSlice.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/MoviePage.js",["100"],"import React, { useEffect, useState } from 'react';\nimport requests from '../Constants/Requests';\nimport Container from '../Components/Container/Container';\nimport Rating from '../Components/Rating/Rating';\nimport Badge from '../Components/Badge/Badge';\nimport ReviewForm from '../Components/ReviewForm/ReviewForm';\nimport Reviews from '../Components/Reviews/Reviews';\nimport './MoviePage.css';\n\nimport { useQuery } from '@apollo/client';\nimport { GET_MOVIE_REVIEWS } from '../Graphql/Queries';\n\nimport { setReviews } from '../features/movie/movieSlice';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\n\nconst MoviePage = (props) => {\n    const dispatch = useDispatch();\n    const user = useSelector((state) => state.auth.user);\n    const reviews = useSelector((state) => state.movie.reviews);\n\n    const hasAlreadyReviewd = () => {\n        var temp = reviews.map(review => {\n            return review.author.id;\n        });\n\n        return temp.includes(user.id);\n    }\n\n    const [movie, setMovie] = useState({});\n\n    var tempUrl = props.location.pathname;\n    tempUrl = tempUrl.slice(7,tempUrl.length);\n\n    const movieId = tempUrl.slice(0, tempUrl.indexOf('/'));\n    const {data: reviewsData, refetch: refetchReviews } = useQuery(GET_MOVIE_REVIEWS, {\n        variables: {movieId: parseInt(movieId)}\n    });\n\n    useEffect(() => {\n        const movieUrl = requests.moviepageRequests.fetchMovie(movieId).url;\n        fetch(movieUrl).then(res => res.json())\n        .then(data => {\n            if (data.status_message) {\n                return;\n            }   \n            setMovie(data);\n        });\n        refetchReviews();\n    }, [])\n   \n    useEffect(() => {\n        if (reviewsData) {\n            dispatch(setReviews(reviewsData.reviewsById));\n        }\n    }, [reviewsData, dispatch])\n\n    var formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n      \n    });\n\n    const movieNotFound = () => {\n        return (\n            <h1 className=\"text-white text-center\" style={{\n                paddingTop: '10rem'\n            }}>Movie not found!</h1>\n        )\n    }\n\n    const movieInfo = () => {\n        return (\n            <div className=\"container-fluid px-0\" style={{\n            background: 'rgba(29, 29, 35, 1)',\n            paddingBottom: '5rem',\n            paddingTop: '5rem',\n        }}>\n            <div className=\"container-fluid px-4\">\n                <div className=\"row\">\n                    <div className=\"img-container col-12 order-2 order-sm-1 col-sm-3 d-flex flex-column\">\n                        <div className=\"mb-4\">\n                            <img key={movie.id} src={IMG_API + movie.poster_path} alt={movie.title} \n                                style={{\n                                    width: '100%',\n                                    boxShadow: '10px 10px 20px black'\n                                }}\n                            />\n                        </div>\n                        <h1 style={{\n                                color: 'rgba(80, 80, 100, 1)',\n                                fontSize: '25px',\n                                fontWeight: '500',\n                                textShadow: '2px 2px black',\n                            }}>Production Companies</h1>\n                        <Container variant=\"shadow\">\n                            {\n                                movie.production_companies.map((company) => {\n                                    return (\n                                        <span key={company.id}\n                                            className=\"\" style={{\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            color: 'rgba(29, 29, 35, 1)',\n                                            fontSize: '16px',\n                                            fontWeight: '500',\n                                        }}>{company.name}</span>\n                                    )\n                                })\n                            }\n                        </Container>\n                    \n                    </div>\n\n                    <div className=\"col order-1 order-sm-2\">\n                        <div className=\"pb-3 row\">\n                            <div className=\"col-12 d-flex flex-column\">\n                                <h1 style={{\n                                    fontSize: '60px',\n                                    textShadow: '4px 4px rgba(80, 80, 100, 1)',\n                                }}>{movie.title}</h1>\n                                {\n                                    movie.tagline && <h1 style={{\n                                        color: 'rgba(80, 80, 100, 1)',\n                                        fontSize: '25px',\n                                        fontWeight: '500',\n                                        textShadow: '2px 2px black',\n                                    }}>{movie.tagline}</h1>\n                                }\n                            </div>\n\n                            <div className=\"col-12 d-flex flex-row py-2 gap-3 genres\">\n                                {\n                                    movie.genres.map((genre, id) => {\n                                        return (\n                                            <Badge key={id}>{genre.name}</Badge>\n                                        )\n                                    })\n                                }\n                            </div>\n                            \n                            <div className=\"col my-3\">\n                                <Container variant=\"shadow\" className=\"d-flex align-items-center justify-content-between\">\n                                    <Rating className=\"\" size=\"large\" score={movie.vote_average}\n                                        style={{\n                                            backgroundColor: 'rgba(225, 202, 240, 1)',\n                                            boxShadow: '4px 4px rgba(29, 29, 35, 1)',\n                                            border: '2px solid white',\n                                        }}\n                                    />\n                                    <span className=\"\" style={{\n                                            color: 'rgba(29, 29, 35, 1)',\n                                            fontSize: '16px',\n                                            fontWeight: '500',\n                                            width: 'auto'\n                                        }}>{movie.runtime+\" mins\"}</span>\n\n                                    <div className=\"d-flex flex-column\">\n                                        <span style={{\n                                            color: 'rgba(29, 29, 35, 1)',\n                                            fontSize: '16px',\n                                            fontWeight: '500',\n                                        }}>{'Budget: '+formatter.format(movie.budget)}</span>\n                                        <span style={{\n                                            color: 'rgba(29, 29, 35, 1)',\n                                            fontSize: '16px',\n                                            fontWeight: '500',\n                                        }}>{'Revenue: '+formatter.format(movie.revenue)}</span>\n                                    </div>\n                                    <div>\n\n                                    </div>\n                                    \n                                </Container>\n                            </div>\n                            \n                        </div>\n                        { movie.overview &&\n                             <Container variant=\"shadow\">\n                                <span className=\"py-1\" style={{\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    color: 'white',\n                                    fontSize: '25px',\n                                    fontWeight: '500',\n                                    textShadow: '2px 2px rgba(29, 29, 35, 1)',\n                                }}>\n                                    Overview\n                                </span>\n                                <span className=\"py-1\" style={{\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    color: 'rgba(29, 29, 35, 1)',\n                                    fontSize: '16px',\n                                    fontWeight: '500',\n                                }}>{movie.overview}</span>\n                            </Container>\n                        }\n\n                        { !hasAlreadyReviewd() &&\n                            <ReviewForm className=\"my-4\" movieId={movie.id}></ReviewForm>\n                        }\n                        \n                        \n                        { reviews.length > 0 &&\n                            <Reviews className=\"mt-3\" reviews={reviews}/> \n                        }\n                         \n                    </div>\n                    \n                </div>\n            </div> \n        </div>\n        )\n    }\n    \n    return (\n        <div className=\"container-fluid\" style={{\n            backgroundColor: \"rgba(29, 29, 35, 1)\",\n        }}>\n            {movie.hasOwnProperty('title') ?\n                movieInfo()\n            :\n                movieNotFound()\n            }\n        </div>\n    )\n}\n\nexport default MoviePage;","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/Container/Container.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/Rating/Rating.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/Badge/Badge.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/ReviewForm/ReviewForm.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/api/user.js",["101","102"],"import axios from \"axios\"\nimport reportWebVitals from \"../reportWebVitals\";\n\nconst fetchLogin = async (username, password) => {\n    await axios.post(\"http://localhost:3001/login\", {\n            username: username,\n            password: password,\n        }).then((response) => {\n            if (response.data.message) {\n                console.log(response.data.message);\n            } else {\n                console.log(response.data);\n            }\n        });\n}\n\nexport default { fetchLogin };",["103","104"],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/IconRating/IconRating.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/features/movie/movieSlice.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/Reviews/Reviews.js",["105","106","107","108","109","110","111","112","113","114","115"],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Graphql/Mutations.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Graphql/Queries.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":51,"column":8,"nodeType":"122","endLine":51,"endColumn":10,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":2,"column":8,"nodeType":"126","messageId":"127","endLine":2,"endColumn":23},{"ruleId":"128","severity":1,"message":"129","line":17,"column":1,"nodeType":"130","endLine":17,"endColumn":31},{"ruleId":"116","replacedBy":"131"},{"ruleId":"118","replacedBy":"132"},{"ruleId":"124","severity":1,"message":"133","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":17},{"ruleId":"124","severity":1,"message":"134","line":2,"column":19,"nodeType":"126","messageId":"127","endLine":2,"endColumn":29},{"ruleId":"124","severity":1,"message":"135","line":6,"column":5,"nodeType":"126","messageId":"127","endLine":6,"endColumn":16},{"ruleId":"124","severity":1,"message":"136","line":7,"column":5,"nodeType":"126","messageId":"127","endLine":7,"endColumn":19},{"ruleId":"124","severity":1,"message":"137","line":17,"column":11,"nodeType":"126","messageId":"127","endLine":17,"endColumn":21},{"ruleId":"124","severity":1,"message":"138","line":19,"column":31,"nodeType":"126","messageId":"127","endLine":19,"endColumn":40},{"ruleId":"124","severity":1,"message":"139","line":19,"column":51,"nodeType":"126","messageId":"127","endLine":19,"endColumn":62},{"ruleId":"124","severity":1,"message":"140","line":20,"column":33,"nodeType":"126","messageId":"127","endLine":20,"endColumn":44},{"ruleId":"124","severity":1,"message":"141","line":20,"column":55,"nodeType":"126","messageId":"127","endLine":20,"endColumn":68},{"ruleId":"124","severity":1,"message":"142","line":20,"column":76,"nodeType":"126","messageId":"127","endLine":20,"endColumn":86},{"ruleId":"124","severity":1,"message":"143","line":21,"column":12,"nodeType":"126","messageId":"127","endLine":21,"endColumn":21},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'movieId' and 'refetchReviews'. Either include them or remove the dependency array.","ArrayExpression",["146"],"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["144"],["145"],"'addLike' is defined but never used.","'removeLike' is defined but never used.","'addUserLike' is defined but never used.","'removeUserLike' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'likeError' is assigned a value but never used.","'likeLoading' is assigned a value but never used.","'unLikeError' is assigned a value but never used.","'unLikeLoading' is assigned a value but never used.","'unLikeData' is assigned a value but never used.","'userLikes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},"Update the dependencies array to be: [movieId, refetchReviews]",{"range":"149","text":"150"},[1698,1700],"[movieId, refetchReviews]"]