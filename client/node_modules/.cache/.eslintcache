[{"/Users/daniel/Desktop/Projects/FilmCritic/client/src/index.js":"1","/Users/daniel/Desktop/Projects/FilmCritic/client/src/reportWebVitals.js":"2","/Users/daniel/Desktop/Projects/FilmCritic/client/src/App.js":"3","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/MovieRow/MovieRow.js":"4","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Constants/Requests.js":"5","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/Navbar/Navbar.js":"6","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/HomePage.js":"7","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/LoginPage.js":"8","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/RegisterPage.js":"9","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Constants/secrets.js":"10"},{"size":500,"mtime":1624648365969,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1624648019340,"results":"13","hashOfConfig":"12"},{"size":945,"mtime":1625180580678,"results":"14","hashOfConfig":"12"},{"size":4844,"mtime":1625164566285,"results":"15","hashOfConfig":"12"},{"size":1242,"mtime":1625183511868,"results":"16","hashOfConfig":"12"},{"size":2601,"mtime":1625180703342,"results":"17","hashOfConfig":"12"},{"size":950,"mtime":1625180162729,"results":"18","hashOfConfig":"12"},{"size":2353,"mtime":1625182489794,"results":"19","hashOfConfig":"12"},{"size":5234,"mtime":1625180500256,"results":"20","hashOfConfig":"12"},{"size":102,"mtime":1625183520467,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1o8c3zb",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/daniel/Desktop/Projects/FilmCritic/client/src/index.js",[],["47","48"],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/reportWebVitals.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/App.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/MovieRow/MovieRow.js",["49","50","51"],"import React, { useEffect, useState } from 'react';\n\nimport './MovieRow.css';\n\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\n\nconst MovieRow = ({category, fetchUrl, backdrop, style }) => {\n\n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {\n        fetch(fetchUrl).then(res => res.json())\n        .then(data => {\n          console.log(data.results);\n          setMovies(data.results);\n        });\n      }, [fetchUrl])\n\n    const ratingColor = (rating) => {\n        if (rating <= 0) {\n            return \"white\";\n        } else if (rating <= 5) {\n            return \"red\";\n        } else if (rating <= 8) {\n            return \"orange\";\n        } else {\n            return \"lightgreen\";\n        }\n    }\n\n      const path = backdrop ? \"backdrop_path\" : \"poster_path\";\n\n    if (path === \"poster_path\") {\n        return (\n            <div className=\"category-row ms-4 mt-2\">\n                <h2 className=\"m-2 category-text\">{category}</h2>\n                <div className=\"poster-row\">\n                    \n                {movies.length > 0 &&\n                    movies.map((movie, id) => {\n                        if (movie[path]){\n                            return (<div className=\"poster\">\n                                <div className=\"rating-container\" style={{\n                                    color: ratingColor(movie.vote_average)\n                                }}>\n                                    {movie.vote_average === 0 ? \"NA\" : movie.vote_average}\n                                </div>\n                                <img key={id} className=\"poster-img m-2\" src={IMG_API + movie[path]} alt={movie.title} />\n                            </div>)\n                        }\n                        \n                    })\n                }</div>\n            </div> \n        )\n    }\n\n\n    return (\n        <div id=\"carouselExampleControls\" class=\"carousel slide\" data-bs-ride=\"carousel\">\n            <div class=\"carousel-inner\">\n                {\n                    movies.map((movie, id) => {\n                        if (movie[path]){\n                            return (\n                                <div className={(id == 0) ? \"carousel-item active\" : \"carousel-item\"} alt={movie.title}>\n                                   <div className=\"poster-lg\">\n                                       <div class=\"movie-info-container\">\n                                            <div class=\"movie-title-container\">\n                                                <h1 className=\"movie-title\">{movie.title}</h1>\n                                            </div>\n                                            <div className=\"movie-desc-container pt-3\">\n                                                <p className=\"movie-desc\">{movie.overview}</p>\n                                            </div>\n                                        </div>\n                                        <div className=\"movie-blur\">\n                                            \n                                        </div>\n                                        <img key={id} className=\"poster-img-lg\" src={IMG_API + movie[path]} alt={movie.title} />\n                                    </div>\n                                </div>\n                            )\n                        }\n                        \n                    })\n                }\n            </div>\n            \n            <div className=\"d-flex flex-direction-row justify-space-between\">\n                <button class=\"carousel-control-prev \" type=\"button\" data-bs-target=\"#carouselExampleControls\" data-bs-slide=\"prev\">\n                    <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                    <span class=\"visually-hidden\">Previous</span>\n                </button>\n                <button class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleControls\" data-bs-slide=\"next\">\n                    <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                    <span class=\"visually-hidden\">Next</span>\n                </button>\n            </div>\n            \n\n        </div>\n    )\n    \n}\n\nexport default MovieRow;\n\n/*\n<div className=\"category-row-lg\">\n\n                <div className=\"poster-row-lg\">\n                    \n                {movies.length > 0 &&\n                    movies.map((movie, id) => {\n                        if (movie[path]){\n                            return (<div className=\"poster-lg\">\n                                <h1 className=\"movie-title\">{movie.title}</h1>\n                                <img key={id} className=\"poster-img-lg\" src={IMG_API + movie[path]} alt={movie.title} />\n                            </div>)\n                        }\n                        \n                    })\n                }</div>\n        </div> \n\n*/","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Constants/Requests.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Components/Navbar/Navbar.js",["52"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport \"./Navbar.css\";\n\nconst Navbar = () => {\n\n    const [navbar, setNavbar] = useState(false);\n\n    const changeNavbar = () => {\n      if (window.scrollY >= 20) {\n        setNavbar(true);\n      } else {\n        setNavbar(false);\n      }\n    }\n\n    window.addEventListener('scroll', changeNavbar);\n\n    return (\n      <nav className=\"navbar navbar-light navbar-expand-md px-4\" style={{\n        background: navbar ? 'rgba(62, 62, 77, 1)' : 'none',\n        position: 'fixed',\n        width: '100%',\n        zIndex: 200,\n      }}>\n        <div className=\"container-fluid nav-container\">\n          <Link to=\"/\" className=\"navbar-brand d-flex flex-row align-items-center\">\n          <i className=\"fa fa-film logo pe-1 \" aria-hidden=\"true\"></i>\n          <div className=\"logo text-white\">Critic</div>\n          </Link>\n\n          <button className=\"me-auto btn-small d-md-none\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span>Browse</span>\n            <i className=\"fa fa-caret-down ps-1\" aria-hidden=\"true\"></i>\n          </button>\n\n          \n          <div className=\"me-auto d-none d-md-flex\">\n            <button className=\"btn-small\">\n              Movies\n            </button>\n          \n            <button className=\"btn-small\">\n              TV Shows\n            </button> \n          </div>\n                 \n          \n          \n          \n\n\n          <i className=\"fa fa-ticket nav-icon xs-hidden\" aria-hidden=\"true\"></i>\n          <Link to=\"/register\" style={{\n            textDecoration: 'none'\n          }}>\n            <button className=\"btn-small mx-1 xs-hidden\">\n              Sign Up\n            </button>\n          </Link>\n\n          <Link to=\"/login\" style={{\n            textDecoration: 'none'\n          }}>\n            <button className=\"btn-login\">\n                Login\n            </button>\n          </Link>\n\n        </div>\n        <div className=\"collapse navbar-collapse p-1 p-md-0 mt-2\" id=\"navbarText\">\n          <ul className=\"navbar-nav me-auto mb-0 d-inline d-md-none\">\n            <li className=\"nav-item\">\n              <button className=\"btn-small\">\n                Movies\n              </button>\n            </li>\n            <li className=\"nav-item\">\n            <button className=\"btn-small me-auto\">\n                TV Shows\n              </button>\n            </li>\n          </ul>\n        </div>\n       \n\n      </nav>\n    )\n}\n\nexport default Navbar;","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/HomePage.js",[],"/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/LoginPage.js",["53"],"import React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\n\nconst LoginPage = () => {\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const login = () => {\n        Axios.post(\"http://localhost:3001/login\", {\n            username: username,\n            password: password,\n        }).then((response) => {\n            console.log(response);\n        });\n    };\n\n    return (\n        <div className=\"container-fluid px-0\" style={{\n            background: 'rgba(29, 29, 35, 1)',\n            paddingBottom: '5rem',\n            paddingTop: '5rem',\n            height: '100vh'\n        }}>\n            <div className=\"container-fluid px-4\">\n                <h1 className=\"py-2\" style={{\n                    fontSize: '48px',\n                    textShadow: '4px 4px rgba(80, 80, 100, 1)',\n                }}>Login</h1>\n                <form className=\"container-fluid py-3\" style={{\n                    backgroundColor: 'rgba(80, 80, 100, 1)',\n                    borderTop: '4px solid rgba(225, 202, 240, 1)',\n                    boxShadow: '10px 10px 20px black',\n                    borderRadius: '3px',\n                }}>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"exampleInputUsername1\" className=\"form-label d-flex\">Username *</label>\n                    <input type=\"username\" className=\"form-control\" id=\"exampleInputUsername1\" aria-describedby=\"usernameHelp\"\n                        onChange={(e) => {\n                            setUsername(e.target.value);\n                        }}\n                    />\n                </div>\n\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"exampleInputPassword1\" className=\"form-label d-flex\">Password *</label>\n                        <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\"\n                            onChange={(e) => {\n                                setPassword(e.target.value);\n                            }}\n                        />\n                    </div>\n                \n                <button type=\"button\" className=\"btn-login me-auto\"\n                    onClick={login}\n                >Login</button>\n                </form>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default LoginPage;","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Pages/RegisterPage.js",["54"],"import React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport './RegisterPage.css'\n\nconst RegisterPage = () => {\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [email, setEmail] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n\n    const register = () => {\n        if (password === confirmPassword) {\n            Axios.post('http://localhost:3001/register', {\n            username: username,\n            password: password,\n            firstName: firstName,\n            lastName: lastName,\n            email: email\n            }).then((response) => {\n            console.log(response);\n            });\n        }\n        \n    };\n\n    return (\n        <div className=\"container-fluid px-0\" style={{\n            background: 'rgba(29, 29, 35, 1)',\n            paddingBottom: '5rem',\n            paddingTop: '5rem',\n        }}>\n            <div className=\"container-fluid px-4\">\n                <h1 className=\"py-2\" style={{\n                    fontSize: '48px',\n                    textShadow: '4px 4px rgba(80, 80, 100, 1)',\n                }}>Register</h1>\n                <form className=\"container-fluid py-3\" style={{\n                    backgroundColor: 'rgba(80, 80, 100, 1)',\n                    borderTop: '4px solid rgba(225, 202, 240, 1)',\n                    boxShadow: '10px 10px 20px black',\n                    borderRadius: '3px',\n                }}>\n                <div className=\"row\">\n                    <div className=\"mb-3 col-12 col-md-6\">\n                        <label htmlFor=\"exampleInputFirstName1\" className=\"form-label\">First name</label>\n                        <input type=\"firstName\" className=\"form-control\" id=\"exampleInputFirstName1\" aria-describedby=\"firstNameHelp\"\n                            onChange={(e) => {\n                                setFirstName(e.target.value);\n                            }}\n                        />\n                    </div>\n                    <div className=\"mb-3 col-12 col-md-6\">\n                        <label htmlFor=\"exampleInputLastName1\" className=\"form-label\">Last name</label>\n                        <input type=\"lastName\" className=\"form-control\" id=\"exampleInputLastName1\" aria-describedby=\"firstNameHelp\"\n                            onChange={(e) => {\n                                setLastName(e.target.value);\n                            }}\n                        />\n                    </div>\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"exampleInputUsername1\" className=\"form-label d-flex\">Username *</label>\n                    <input type=\"username\" className=\"form-control\" id=\"exampleInputUsername1\" aria-describedby=\"usernameHelp\"\n                        onChange={(e) => {\n                            setUsername(e.target.value);\n                        }}\n                    />\n                </div>\n                \n                <div className=\"mb-2\">\n                    <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\n                    <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\n                        onChange={(e) => {\n                            setEmail(e.target.value);\n                        }}\n                    />\n                    <div id=\"emailHelp\" className=\"form-text\" style={{\n                        color: 'rgba(29, 29, 35, 1)'\n                    }}>We'll never share your email with anyone else.</div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"mb-3 col-12 col-md-6\">\n                        <label htmlFor=\"exampleInputPassword1\" className=\"form-label d-flex\">Password *</label>\n                        <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\"\n                            onChange={(e) => {\n                                setPassword(e.target.value);\n                            }}\n                        />\n                    </div>\n                    <div className=\"mb-3 col-12 col-md-6\">\n                        <label htmlFor=\"exampleInputConfirmPassword1\" className=\"form-label\">Confirm Password *</label>\n                        <input type=\"password\" className=\"form-control\" id=\"exampleInputConfirmPassword1\"\n                            onChange={(e) => {\n                                setConfirmPassword(e.target.value);\n                            }}\n                        />\n                        <div id=\"confirmPasswordHelp\" className=\"form-text\" style={{\n                            color: 'rgba(29, 29, 35, 1)'\n                        }}>Re-enter your password to confirm it was entered correctly.</div>\n                    </div>\n                </div>\n                \n                <button type=\"submit\" className=\"btn-login me-auto\"\n                    onClick={register}\n                >Register</button>\n                </form>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default RegisterPage;","/Users/daniel/Desktop/Projects/FilmCritic/client/src/Constants/secrets.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":40,"column":44,"nodeType":"61","messageId":"62","endLine":40,"endColumn":46},{"ruleId":"59","severity":1,"message":"60","line":63,"column":44,"nodeType":"61","messageId":"62","endLine":63,"endColumn":46},{"ruleId":"63","severity":1,"message":"64","line":66,"column":53,"nodeType":"65","messageId":"66","endLine":66,"endColumn":55},{"ruleId":"67","severity":1,"message":"68","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":26},{"ruleId":"67","severity":1,"message":"68","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":26},{"ruleId":"67","severity":1,"message":"68","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":26},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]